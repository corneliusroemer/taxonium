{"version":3,"file":"node_modules_jbrowse_plugin-alignments_esm_LinearPileupDisplay_components_SetFeatureHeight_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AACF;AACoH;AAC/G;AACO;AAClD,kBAAkB,yDAAU;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA,YAAY,UAAU;AACtB,YAAY,qBAAqB;AACjC,YAAY,oDAAoD;AAChE,gCAAgC,+CAAQ,IAAI,qBAAqB;AACjE,sCAAsC,+CAAQ;AAC9C;AACA,YAAY,gDAAmB,CAAC,qDAAM,IAAI,kCAAkC;AAC5E,QAAQ,gDAAmB,CAAC,qDAAW;AACvC;AACA,YAAY,gDAAmB,CAAC,qDAAU,IAAI,sDAAsD;AACpG,gBAAgB,gDAAmB,CAAC,iEAAS;AAC7C,QAAQ,gDAAmB,CAAC,qDAAa;AACzC,YAAY,gDAAmB,CAAC,qDAAU;AAC1C,YAAY,gDAAmB,CAAC,qDAAS,IAAI;AAC7C;AACA,mBAAmB;AACnB,YAAY,gDAAmB,CAAC,qDAAgB,IAAI,SAAS,gDAAmB,CAAC,sDAAQ,IAAI,iEAAiE,6DAA6D;AAC3N,YAAY,gDAAmB,CAAC,sDAAa;AAC7C,gBAAgB,gDAAmB,CAAC,sDAAM,IAAI;AAC9C;AACA;AACA;AACA,uBAAuB;AACvB,gBAAgB,gDAAmB,CAAC,sDAAM,IAAI,wEAAwE;AACtH;AACA,+DAAe,qDAAQ,qBAAqB,EAAC;AAC7C","sources":["webpack://taxonium/./node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/SetFeatureHeight.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, IconButton, TextField, Typography, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport CloseIcon from '@mui/icons-material/Close';\nconst useStyles = makeStyles()(theme => ({\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n}));\nfunction SetFeatureHeightDlg(props) {\n    const { classes } = useStyles();\n    const { model, handleClose } = props;\n    const { featureHeightSetting, noSpacing: noSpacingSetting } = model;\n    const [height, setHeight] = useState(`${featureHeightSetting}`);\n    const [noSpacing, setNoSpacing] = useState(noSpacingSetting);\n    const ok = height !== '' && !Number.isNaN(+height);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose },\n        React.createElement(DialogTitle, null,\n            \"Set feature height\",\n            React.createElement(IconButton, { className: classes.closeButton, onClick: handleClose },\n                React.createElement(CloseIcon, null))),\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Adjust the feature height and whether there is any spacing between features. Setting feature height to 1 and removing spacing makes the display very compact.\"),\n            React.createElement(TextField, { value: height, helperText: \"Feature height\", onChange: event => {\n                    setHeight(event.target.value);\n                } }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: !!noSpacing, onChange: () => setNoSpacing(val => !val) }), label: \"Remove spacing between features in y-direction?\" }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, disabled: !ok, onClick: () => {\n                        model.setFeatureHeight(height !== '' && !Number.isNaN(+height) ? +height : undefined);\n                        model.setNoSpacing(noSpacing);\n                        handleClose();\n                    } }, \"Submit\"),\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => handleClose() }, \"Cancel\")))));\n}\nexport default observer(SetFeatureHeightDlg);\n//# sourceMappingURL=SetFeatureHeight.js.map"],"names":[],"sourceRoot":""}