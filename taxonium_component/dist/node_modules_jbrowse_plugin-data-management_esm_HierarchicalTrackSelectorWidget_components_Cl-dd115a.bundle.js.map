{"version":3,"file":"node_modules_jbrowse_plugin-data-management_esm_HierarchicalTrackSelectorWidget_components_Cl-dd115a.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAA0B;AACoG;AACxF;AACtC,iCAAiC,cAAc,iBAAiB;AAChE,YAAY,oDAAoD;AAChE,YAAY,gDAAmB,CAAC,qDAAM,IAAI,YAAY;AACtD,QAAQ,gDAAmB,CAAC,qDAAW;AACvC;AACA;AACA;AACA,QAAQ,gDAAmB,CAAC,qDAAa;AACzC,oCAAoC,gDAAmB,CAAC,2CAAc;AACtE,gBAAgB,gDAAmB,CAAC,qDAAiB;AACrD,gBAAgB,gDAAmB,CAAC,qDAAI,oEAAoE,gDAAmB,CAAC,qDAAQ,IAAI,UAAU,KAAK,OAAO,EAAE,IAAI;AACxK,YAAY,gDAAmB,CAAC,qDAAiB;AACjD,QAAQ,gDAAmB,CAAC,qDAAa;AACzC,YAAY,gDAAmB,CAAC,qDAAM,IAAI,iDAAiD;AAC3F,YAAY,gDAAmB,CAAC,qDAAM,IAAI;AAC1C;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA,+DAAe,oDAAQ,uBAAuB,EAAC;AAC/C","sources":["webpack://taxonium/./node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/CloseConnectionDialog.js"],"sourcesContent":["import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, Button, List, ListItem, DialogActions, } from '@mui/material';\nimport { observer } from 'mobx-react';\nfunction CloseConnectionDialog({ modalInfo = {}, setModalInfo, }) {\n    const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo;\n    return (React.createElement(Dialog, { open: true },\n        React.createElement(DialogTitle, null,\n            \"Close connection \\\"\",\n            name,\n            \"\\\"\"),\n        React.createElement(DialogContent, null,\n            dereferenceTypeCount ? (React.createElement(React.Fragment, null,\n                React.createElement(DialogContentText, null, \"Closing this connection will close:\"),\n                React.createElement(List, null, Object.entries(dereferenceTypeCount).map(([key, value]) => (React.createElement(ListItem, { key: key }, `${value} ${key}`)))))) : null,\n            React.createElement(DialogContentText, null, \"Are you sure you want to close this connection?\")),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => setModalInfo(), color: \"primary\" }, \"Cancel\"),\n            React.createElement(Button, { variant: \"contained\", onClick: modalInfo\n                    ? () => {\n                        safelyBreakConnection === null || safelyBreakConnection === void 0 ? void 0 : safelyBreakConnection();\n                        setModalInfo();\n                    }\n                    : () => { }, color: \"primary\" }, \"OK\"))));\n}\nexport default observer(CloseConnectionDialog);\n//# sourceMappingURL=CloseConnectionDialog.js.map"],"names":[],"sourceRoot":""}