{"version":3,"file":"vendors-node_modules_jbrowse_plugin-config_esm_ConfigurationEditorWidget_components_Configura-500010.bundle.js","mappings":"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I,sBAAsB;AAC/P,CAAC;AACD,+DAAe,YAAY,EAAC;AAC5B;;;;;;;;;;;ACXa;;AAEb,6BAA6B,mBAAO,CAAC,qJAA8C;;AAEnF,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,4CAA4C,mBAAO,CAAC,wFAAuB;;AAE3E,kBAAkB,mBAAO,CAAC,8DAAmB;;AAE7C;AACA;AACA,CAAC;;AAED,kBAAe;;;;;;;;;;ACjBf;;AAEA;AACA;AACA,MAAM,IAA0F;AAChG;AACA;AACA,IAAI,KAAK,EAQN;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA,8BAA8B,IAAI;AAClC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC","sources":["webpack://taxonium/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/CallbackEditor.js","webpack://taxonium/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/ColorEditor.js","webpack://taxonium/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/ConfigurationEditor.js","webpack://taxonium/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/SlotEditor.js","webpack://taxonium/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/StringArrayEditor.js","webpack://taxonium/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/TypeSelector.js","webpack://taxonium/./node_modules/@mui/icons-material/Add.js","webpack://taxonium/./node_modules/pluralize/pluralize.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Tooltip, IconButton, TextField } from '@mui/material';\nimport { useDebounce } from '@jbrowse/core/util';\nimport { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings';\nimport { getEnv } from 'mobx-state-tree';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\n// icons\nimport HelpIcon from '@mui/icons-material/Help';\n// Optimize by using system default fonts:\n// https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily = 'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace';\nconst useStyles = makeStyles()(theme => ({\n    callbackEditor: {\n        marginTop: '16px',\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        width: '100%',\n        fontFamily,\n    },\n    textAreaFont: {\n        fontFamily,\n    },\n    callbackContainer: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    error: {\n        color: 'red',\n        fontSize: '0.8em',\n    },\n}));\nfunction CallbackEditor({ slot, }) {\n    const { classes } = useStyles();\n    const [code, setCode] = useState(slot.value);\n    const [error, setCodeError] = useState();\n    const debouncedCode = useDebounce(code, 400);\n    useEffect(() => {\n        var _a;\n        try {\n            const jexlDebouncedCode = debouncedCode.startsWith('jexl:')\n                ? debouncedCode\n                : `jexl:${debouncedCode}`;\n            if (jexlDebouncedCode === 'jexl:') {\n                throw new Error('Empty jexl expression is not valid');\n            }\n            stringToJexlExpression(jexlDebouncedCode, (_a = getEnv(slot).pluginManager) === null || _a === void 0 ? void 0 : _a.jexl);\n            slot.set(jexlDebouncedCode);\n            setCodeError(undefined);\n        }\n        catch (e) {\n            console.error({ e });\n            setCodeError(e);\n        }\n    }, [debouncedCode, slot]);\n    // if default value is a callback, will have to remove jexl:\n    // do this last\n    return (React.createElement(React.Fragment, null,\n        error ? React.createElement(\"p\", { className: classes.error }, `${error}`) : null,\n        React.createElement(\"div\", { className: classes.callbackContainer },\n            React.createElement(TextField, { multiline: true, className: classes.callbackEditor, value: code.startsWith('jexl:') ? code.split('jexl:')[1] : code, onChange: event => setCode(event.target.value), style: { background: error ? '#fdd' : undefined }, InputProps: {\n                    classes: {\n                        input: classes.textAreaFont,\n                    },\n                } }),\n            React.createElement(\"p\", null, slot.description),\n            React.createElement(Tooltip, { title: React.createElement(\"div\", null,\n                    \"Callbacks are written in Jexl format. Click to learn more.\",\n                    React.createElement(\"br\", null),\n                    \" Names of available context items: \",\n                    slot.contextVariable), arrow: true },\n                React.createElement(IconButton, { color: \"primary\", onClick: () => {\n                        const newWindow = window.open('https://github.com/TomFrost/Jexl', '_blank', 'noopener,noreferrer');\n                        if (newWindow) {\n                            newWindow.opener = null;\n                        }\n                    } },\n                    React.createElement(HelpIcon, null))))));\n}\nexport default observer(CallbackEditor);\n//# sourceMappingURL=CallbackEditor.js.map","import React, { lazy, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { TextField } from '@mui/material';\nconst ColorPicker = lazy(() => import('@jbrowse/core/ui/ColorPicker'));\nexport const ColorSlot = (props) => {\n    const { value = '#000', label = '', TextFieldProps = {}, onChange } = props;\n    const [displayed, setDisplayed] = useState(false);\n    return (React.createElement(\"div\", { style: { display: 'flex' } },\n        React.createElement(TextField, { value: value, label: label, onClick: () => setDisplayed(!displayed), onChange: event => onChange(event.target.value), ...TextFieldProps }),\n        React.createElement(\"div\", { style: { marginTop: 10 } },\n            React.createElement(React.Suspense, { fallback: React.createElement(\"div\", null) },\n                React.createElement(ColorPicker, { color: value, onChange: event => onChange(event) })))));\n};\nfunction ColorEditorSlot(props) {\n    const { slot } = props;\n    return (React.createElement(ColorSlot, { label: slot.name, value: slot.value, onChange: color => slot.set(color), TextFieldProps: {\n            helperText: slot.description,\n            fullWidth: true,\n        } }));\n}\nexport default observer(ColorEditorSlot);\n//# sourceMappingURL=ColorEditor.js.map","import React from 'react';\nimport { readConfObject, getTypeNamesFromExplicitlyTypedUnion, isConfigurationSchemaType, isConfigurationSlotType, } from '@jbrowse/core/configuration';\nimport { FormGroup, Accordion, AccordionDetails, AccordionSummary, Typography, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { observer } from 'mobx-react';\nimport { getMembers } from 'mobx-state-tree';\nimport { singular } from 'pluralize';\n// icons\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n// locals\nimport SlotEditor from './SlotEditor';\nimport TypeSelector from './TypeSelector';\nconst useStyles = makeStyles()(theme => ({\n    expandIcon: {\n        color: '#fff',\n    },\n    root: {\n        padding: theme.spacing(1, 3, 1, 1),\n    },\n    expansionPanelDetails: {\n        display: 'block',\n        padding: theme.spacing(1),\n    },\n    accordion: {\n        border: `1px solid ${theme.palette.text.primary}`,\n    },\n    noOverflow: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n}));\nconst Member = observer((props) => {\n    const { classes } = useStyles();\n    const { slotName, slotSchema, schema, slot = schema[slotName], path = [], } = props;\n    let typeSelector;\n    if (isConfigurationSchemaType(slotSchema)) {\n        if (slot.length) {\n            return slot.map((subslot, slotIndex) => {\n                const key = `${singular(slotName)} ${slotIndex + 1}`;\n                return React.createElement(Member, { ...props, key: key, slot: subslot, slotName: key });\n            });\n        }\n        // if this is an explicitly typed schema, make a type-selecting dropdown\n        // that can be used to change its type\n        const typeNameChoices = getTypeNamesFromExplicitlyTypedUnion(slotSchema);\n        if (typeNameChoices.length) {\n            typeSelector = (React.createElement(TypeSelector, { typeNameChoices: typeNameChoices, slotName: slotName, slot: slot, onChange: evt => {\n                    if (evt.target.value !== slot.type) {\n                        schema.setSubschema(slotName, { type: evt.target.value });\n                    }\n                } }));\n        }\n        return (React.createElement(Accordion, { defaultExpanded: true, className: classes.accordion },\n            React.createElement(AccordionSummary, { expandIcon: React.createElement(ExpandMoreIcon, { className: classes.expandIcon }) },\n                React.createElement(Typography, null, [...path, slotName].join('🡒'))),\n            React.createElement(AccordionDetails, { className: classes.expansionPanelDetails },\n                typeSelector,\n                React.createElement(FormGroup, { className: classes.noOverflow },\n                    React.createElement(Schema, { schema: slot, path: [...path, slotName] })))));\n    }\n    if (isConfigurationSlotType(slotSchema)) {\n        // this is a regular config slot\n        return React.createElement(SlotEditor, { key: slotName, slot: slot, slotSchema: slotSchema });\n    }\n    return null;\n});\nconst Schema = observer(({ schema, path = [], }) => {\n    const properties = getMembers(schema).properties;\n    return (React.createElement(React.Fragment, null, Object.entries(properties).map(([slotName, slotSchema]) => (React.createElement(Member, { key: slotName, slotName: slotName, slotSchema: slotSchema, path: path, schema: schema })))));\n});\nconst ConfigurationEditor = observer(({ model }) => {\n    const { classes } = useStyles();\n    // key forces a re-render, otherwise the same field can end up being used\n    // for different tracks since only the backing model changes for example\n    // see pr #804\n    const { target } = model;\n    const key = target && readConfObject(target, 'trackId');\n    const name = target && readConfObject(target, 'name');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Accordion, { key: key, defaultExpanded: true, className: classes.accordion },\n            React.createElement(AccordionSummary, { expandIcon: React.createElement(ExpandMoreIcon, { className: classes.expandIcon }) },\n                React.createElement(Typography, null, name !== null && name !== void 0 ? name : 'Configuration')),\n            React.createElement(AccordionDetails, { className: classes.expansionPanelDetails, \"data-testid\": \"configEditor\" }, !target ? 'no target set' : React.createElement(Schema, { schema: target }))),\n        React.createElement(\"div\", { style: { height: 300 } })));\n});\nexport default ConfigurationEditor;\n//# sourceMappingURL=ConfigurationEditor.js.map","import React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { getPropertyMembers, getEnv } from 'mobx-state-tree';\nimport { FileSelector, SanitizedHTML } from '@jbrowse/core/ui';\nimport { getPropertyType, getSubType, getUnionSubTypes, } from '@jbrowse/core/util/mst-reflection';\nimport { Card, CardContent, CardHeader, Checkbox, FormControl, FormControlLabel, FormHelperText, IconButton, InputAdornment, InputLabel, MenuItem, Paper, SvgIcon, TextField, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\n// locals\nimport StringArrayEditor from './StringArrayEditor';\nimport CallbackEditor from './CallbackEditor';\nimport ColorEditor from './ColorEditor';\nimport JsonEditor from './JsonEditor';\n// adds ability to have html in helperText. note that FormHelperTextProps is\n// div because the default is p which does not like div children\nfunction MyTextField(props) {\n    const { helperText } = props;\n    return (React.createElement(TextField, { ...props, helperText: React.createElement(SanitizedHTML, { html: helperText || '' }), FormHelperTextProps: {\n            // @ts-ignore\n            component: 'div',\n        }, fullWidth: true }));\n}\nconst StringEditor = observer(({ slot, }) => (React.createElement(MyTextField, { label: slot.name, helperText: slot.description, value: slot.value, onChange: evt => slot.set(evt.target.value) })));\nconst TextEditor = observer(({ slot, }) => (React.createElement(TextField, { label: slot.name, helperText: slot.description, multiline: true, value: slot.value, onChange: evt => slot.set(evt.target.value) })));\n// checked checkbox, looks like a styled (x)\nconst SvgCheckbox = () => (React.createElement(SvgIcon, null,\n    React.createElement(\"path\", { d: \"M20.41,3C21.8,5.71 22.35,8.84 22,12C21.8,15.16 20.7,18.29 18.83,21L17.3,20C18.91,17.57 19.85,14.8 20,12C20.34,9.2 19.89,6.43 18.7,4L20.41,3M5.17,3L6.7,4C5.09,6.43 4.15,9.2 4,12C3.66,14.8 4.12,17.57 5.3,20L3.61,21C2.21,18.29 1.65,15.17 2,12C2.2,8.84 3.3,5.71 5.17,3M12.08,10.68L14.4,7.45H16.93L13.15,12.45L15.35,17.37H13.09L11.71,14L9.28,17.33H6.76L10.66,12.21L8.53,7.45H10.8L12.08,10.68Z\" })));\nconst useMapEditorStyles = makeStyles()(theme => ({\n    card: {\n        marginTop: theme.spacing(1),\n    },\n}));\nconst StringArrayMapEditor = observer(({ slot, }) => {\n    const { classes } = useMapEditorStyles();\n    const [value, setValue] = useState('');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(InputLabel, null, slot.name),\n        Array.from(slot.value, ([key, val]) => (React.createElement(Card, { raised: true, key: key, className: classes.card },\n            React.createElement(CardHeader, { title: key, action: React.createElement(IconButton, { color: \"secondary\", onClick: () => slot.remove(key) },\n                    React.createElement(DeleteIcon, null)) }),\n            React.createElement(CardContent, null,\n                React.createElement(StringArrayEditor, { slot: {\n                        name: slot.name,\n                        value: val,\n                        description: `Values associated with entry ${key}`,\n                        setAtIndex: (idx, val) => slot.setAtKeyIndex(key, idx, val),\n                        removeAtIndex: (idx) => slot.removeAtKeyIndex(key, idx),\n                        add: (val) => slot.addToKey(key, val),\n                    } }))))),\n        React.createElement(Card, { raised: true, className: classes.card },\n            React.createElement(CardHeader, { disableTypography: true, title: React.createElement(TextField, { fullWidth: true, value: value, placeholder: \"add new\", onChange: event => setValue(event.target.value), InputProps: {\n                        endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                            React.createElement(IconButton, { disabled: value === '', onClick: () => {\n                                    slot.add(value, []);\n                                    setValue('');\n                                }, color: \"secondary\" },\n                                React.createElement(AddIcon, null)))),\n                    } }) })),\n        React.createElement(FormHelperText, null, slot.description)));\n});\nconst NumberMapEditor = observer(({ slot, }) => {\n    const { classes } = useMapEditorStyles();\n    const [value, setValue] = useState('');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(InputLabel, null, slot.name),\n        Array.from(slot.value, ([key, val]) => (React.createElement(Card, { raised: true, key: key, className: classes.card },\n            React.createElement(CardHeader, { title: key, action: React.createElement(IconButton, { color: \"secondary\", onClick: () => slot.remove(key) },\n                    React.createElement(DeleteIcon, null)) }),\n            React.createElement(CardContent, null,\n                React.createElement(NumberEditor, { slot: {\n                        value: val,\n                        set: (val) => slot.add(key, val),\n                    } }))))),\n        React.createElement(Card, { raised: true, className: classes.card },\n            React.createElement(CardHeader, { disableTypography: true, title: React.createElement(TextField, { fullWidth: true, value: value, placeholder: \"add new\", onChange: event => setValue(event.target.value), InputProps: {\n                        endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                            React.createElement(IconButton, { disabled: value === '', onClick: () => {\n                                    slot.add(value, 0);\n                                    setValue('');\n                                }, color: \"secondary\" },\n                                React.createElement(AddIcon, null)))),\n                    } }) })),\n        React.createElement(FormHelperText, null, slot.description)));\n});\nconst NumberEditor = observer(({ slot, }) => {\n    const [val, setVal] = useState(slot.value);\n    useEffect(() => {\n        var _a;\n        const num = parseFloat(val);\n        if (!Number.isNaN(num)) {\n            slot.set(num);\n        }\n        else {\n            (_a = slot.reset) === null || _a === void 0 ? void 0 : _a.call(slot);\n        }\n    }, [slot, val]);\n    return (React.createElement(MyTextField, { label: slot.name, helperText: slot.description, value: val, type: \"number\", onChange: evt => setVal(evt.target.value) }));\n});\nconst IntegerEditor = observer(({ slot, }) => {\n    const [val, setVal] = useState(slot.value);\n    useEffect(() => {\n        const num = parseInt(val, 10);\n        if (!Number.isNaN(num)) {\n            slot.set(num);\n        }\n    }, [slot, val]);\n    return (React.createElement(MyTextField, { label: slot.name, helperText: slot.description, value: val, type: \"number\", onChange: evt => setVal(evt.target.value) }));\n});\nconst BooleanEditor = observer(({ slot, }) => (React.createElement(FormControl, null,\n    React.createElement(FormControlLabel, { label: slot.name, control: React.createElement(Checkbox, { checked: slot.value, onChange: evt => slot.set(evt.target.checked) }) }),\n    React.createElement(FormHelperText, null, slot.description))));\nconst StringEnumEditor = observer(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n({ slot, slotSchema }) => {\n    const p = getPropertyMembers(getSubType(slotSchema));\n    const choices = getUnionSubTypes(getUnionSubTypes(getSubType(getPropertyType(p, 'value')))[1]).map(t => t.value);\n    return (React.createElement(MyTextField, { value: slot.value, label: slot.name, select: true, helperText: slot.description, onChange: evt => slot.set(evt.target.value) }, choices.map(str => (React.createElement(MenuItem, { key: str, value: str }, str)))));\n});\nconst FileSelectorWrapper = observer(({ slot, }) => {\n    var _a;\n    return (React.createElement(FileSelector, { location: slot.value, setLocation: location => slot.set(location), name: slot.name, description: slot.description, rootModel: (_a = getEnv(slot).pluginManager) === null || _a === void 0 ? void 0 : _a.rootModel }));\n});\nconst valueComponents = {\n    string: StringEditor,\n    text: TextEditor,\n    fileLocation: FileSelectorWrapper,\n    stringArray: StringArrayEditor,\n    stringArrayMap: StringArrayMapEditor,\n    numberMap: NumberMapEditor,\n    number: NumberEditor,\n    integer: IntegerEditor,\n    color: ColorEditor,\n    stringEnum: StringEnumEditor,\n    boolean: BooleanEditor,\n    frozen: JsonEditor,\n    configRelationships: JsonEditor,\n};\nexport const useSlotEditorStyles = makeStyles()(theme => ({\n    paper: {\n        display: 'flex',\n        marginBottom: theme.spacing(2),\n        position: 'relative',\n    },\n    paperContent: {\n        width: '100%',\n    },\n    slotModeSwitch: {\n        width: 24,\n        background: theme.palette.secondary.light,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n}));\nconst SlotEditor = observer(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n({ slot, slotSchema }) => {\n    const { classes } = useSlotEditorStyles();\n    const { type } = slot;\n    let ValueComponent = slot.isCallback\n        ? CallbackEditor\n        : // @ts-ignore\n            valueComponents[type];\n    if (!ValueComponent) {\n        console.warn(`no slot editor defined for ${type}, editing as string`);\n        ValueComponent = StringEditor;\n    }\n    if (!(type in valueComponents)) {\n        console.warn(`SlotEditor needs to implement ${type}`);\n    }\n    return (React.createElement(Paper, { className: classes.paper },\n        React.createElement(\"div\", { className: classes.paperContent },\n            React.createElement(ValueComponent, { slot: slot, slotSchema: slotSchema })),\n        React.createElement(\"div\", { className: classes.slotModeSwitch }, slot.contextVariable.length ? (React.createElement(IconButton, { onClick: () => slot.isCallback\n                ? slot.convertToValue()\n                : slot.convertToCallback(), title: `convert to ${slot.isCallback ? 'regular value' : 'callback'}`, color: \"secondary\" }, !slot.isCallback ? (React.createElement(RadioButtonUncheckedIcon, null)) : (React.createElement(SvgCheckbox, null)))) : null)));\n});\nexport default SlotEditor;\n//# sourceMappingURL=SlotEditor.js.map","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, FormHelperText, IconButton, InputAdornment, InputLabel, List, ListItem, TextField, } from '@mui/material';\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete';\nconst StringArrayEditor = observer(({ slot, }) => {\n    const [value, setValue] = useState('');\n    const [addNew, setAddNew] = useState(false);\n    return (React.createElement(React.Fragment, null,\n        slot.name ? React.createElement(InputLabel, null, slot.name) : null,\n        React.createElement(List, { disablePadding: true },\n            slot.value.map((val, idx) => (React.createElement(ListItem, { key: idx, disableGutters: true },\n                React.createElement(TextField, { value: val, onChange: evt => slot.setAtIndex(idx, evt.target.value), InputProps: {\n                        endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                            React.createElement(IconButton, { color: \"secondary\", onClick: () => slot.removeAtIndex(idx) },\n                                React.createElement(DeleteIcon, null)))),\n                    } })))),\n            addNew ? (React.createElement(ListItem, { disableGutters: true },\n                React.createElement(TextField, { value: value, placeholder: \"add new\", onChange: event => setValue(event.target.value), InputProps: {\n                        endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                            React.createElement(React.Fragment, null,\n                                React.createElement(Button, { color: \"primary\", variant: \"contained\", style: { margin: 2 }, \"data-testid\": `stringArrayAdd-${slot.name}`, onClick: () => {\n                                        setAddNew(false);\n                                        slot.add(value);\n                                        setValue('');\n                                    } }, \"OK\"),\n                                React.createElement(Button, { color: \"primary\", variant: \"contained\", style: { margin: 2 }, onClick: () => {\n                                        setAddNew(false);\n                                        setValue('');\n                                    } }, \"Cancel\")))),\n                    } }))) : null,\n            React.createElement(Button, { color: \"primary\", variant: \"contained\", style: { margin: 4 }, disabled: addNew, onClick: () => setAddNew(true) }, \"Add item\")),\n        React.createElement(FormHelperText, null, slot.description)));\n});\nexport default StringArrayEditor;\n//# sourceMappingURL=StringArrayEditor.js.map","import React from 'react';\nimport { MenuItem, Paper, TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { useSlotEditorStyles } from './SlotEditor';\nconst TypeSelector = observer(({ typeNameChoices, slot, slotName, onChange, }) => {\n    const { classes } = useSlotEditorStyles();\n    return (React.createElement(Paper, { className: classes.paper },\n        React.createElement(\"div\", { className: classes.paperContent },\n            React.createElement(TextField, { value: slot.type, label: \"Type\", select: true, helperText: `Type of ${slotName} to use`, fullWidth: true, onChange: onChange }, typeNameChoices.map(str => (React.createElement(MenuItem, { key: str, value: str }, str)))))));\n});\nexport default TypeSelector;\n//# sourceMappingURL=TypeSelector.js.map","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n"],"names":[],"sourceRoot":""}