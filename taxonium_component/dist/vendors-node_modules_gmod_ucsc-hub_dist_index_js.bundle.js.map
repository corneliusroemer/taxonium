{"version":3,"file":"vendors-node_modules_gmod_ucsc-hub_dist_index_js.bundle.js","mappings":"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,mBAAO,CAAC,0FAAiC,GAAG,yDAAyD,mBAAO,CAAC,4HAAkD,GAAG,8CAA8C,mBAAO,CAAC,sGAAuC,GAAG,+CAA+C,mBAAO,CAAC,wGAAwC,GAAG,gCAAgC,oBAAoB,0DAA0D,kCAAkC,gEAAgE,0DAA0D,MAAM,uCAAuC,iEAAiE,sCAAsC,uEAAuE,yCAAyC,6CAA6C,KAAK,uEAAuE,GAAG,cAAc,WAAW,eAAe,mBAAO,CAAC,4FAAyB;;AAEnnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ooDAAooD,kBAAkB;AACtpD;AACA,ooDAAooD,kBAAkB;AACtpD;AACA;AACA,ooDAAooD,kBAAkB;AACtpD;AACA;AACA,koDAAkoD,OAAO;AACzoD;AACA;AACA,ioDAAioD,mBAAmB;AACppD;AACA;AACA,ioDAAioD,QAAQ;AACzoD,ioDAAioD,SAAS;AAC1oD;AACA;AACA,yCAAyC,wCAAwC;AACjF,6BAA6B,UAAU,oFAAoF,oBAAoB;AAC/I,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,UAAU;AAC3B,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sDAAsD,2BAA2B;AACxG;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB,mBAAmB,UAAU;AAC7B,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB,mBAAmB,SAAS;AAC5B,WAAW,IAAI;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,sBAAsB;;AAE9C;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,KAAK;AACL;AACA;AACA;AACA,sFAAsF;AACtF;AACA,OAAO;AACP;AACA,OAAO,GAAG,iBAAiB;;;AAG3B;;;;;;;;;;;AC5Ka,6BAA6B,mBAAO,CAAC,oHAA8C,EAAE,6CAA6C,mBAAO,CAAC,oGAAsC,GAAG,8CAA8C,mBAAO,CAAC,sGAAuC,GAAG,2CAA2C,mBAAO,CAAC,gGAAoC,GAAG,wCAAwC,mBAAO,CAAC,0FAAiC,GAAG,yDAAyD,mBAAO,CAAC,4HAAkD,GAAG,8CAA8C,mBAAO,CAAC,sGAAuC,GAAG,gCAAgC,oBAAoB,0DAA0D,kCAAkC,gEAAgE,0DAA0D,MAAM,uCAAuC,iEAAiE,sCAAsC,uEAAuE,yCAAyC,6CAA6C,KAAK,uEAAuE,GAAG,cAAc,WAAW,eAAe,aAAa,mBAAO,CAAC,8DAAU;;AAEr3C;AACA;AACA;AACA,m4CAAm4C,mBAAmB;AACt5C,o4CAAo4C,OAAO;AAC34C;AACA;AACA,+CAA+C,8CAA8C;AAC7F,qCAAqC,UAAU;AAC/C,6CAA6C,oBAAoB;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,sCAAsC;AAChF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD,oFAAoF;AACvJ;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,OAAO;AACvB,kDAAkD;AAClD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,OAAO,GAAG,oBAAoB;;;AAG9B;;;;;;;;;;;AC1Fa,CAAC;AACd;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA","sources":["webpack://taxonium/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/construct.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/createClass.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/get.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/inherits.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/superPropBase.js","webpack://taxonium/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack://taxonium/./node_modules/@gmod/ucsc-hub/dist/genomesFile.js","webpack://taxonium/./node_modules/@gmod/ucsc-hub/dist/hubFile.js","webpack://taxonium/./node_modules/@gmod/ucsc-hub/dist/index.js","webpack://taxonium/./node_modules/@gmod/ucsc-hub/dist/raFile.js","webpack://taxonium/./node_modules/@gmod/ucsc-hub/dist/raStanza.js","webpack://taxonium/./node_modules/@gmod/ucsc-hub/dist/trackDbFile.js","webpack://taxonium/./node_modules/@gmod/ucsc-hub/dist/trimStartEndPolyfills.js"],"sourcesContent":["function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeFunction = require(\"./isNativeFunction.js\");\n\nvar construct = require(\"./construct.js\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaFile = require('./raFile');\n\n/**\nlass representing a genomes.txt file.\nextends RaFile\nparam {(string|string[])} [genomesFile=[]] - A genomes.txt file as a string\nthrows {Error} Throws if the first line of the hub.txt file doesn't start\nwith \"genome <genome_name>\" or if it has invalid entries\nvar\nGenomesFile = /*#__PURE__*/function (_RaFile) {(0, _inherits2.default)(GenomesFile, _RaFile);var _super = _createSuper(GenomesFile);\n  function GenomesFile(genomesFile) {var _this;(0, _classCallCheck2.default)(this, GenomesFile);\n    _this = _super.call(this, genomesFile);\n    if (_this.nameKey !== 'genome')\n    throw new Error(\n    'Genomes file must begin with a line like \"genome <genome_name>\"');\n\n\n    // TODO: check if genome is hosted by UCSC and if not, require twoBitPath and groups\n    var requiredFields = [\n    'genome',\n    'trackDb'\n    // 'twoBitPath',\n    // 'groups',\n    ];\n    _this.forEach(function (genome, genomeName) {\n      var missingFields = [];\n      requiredFields.forEach(function (field) {\n        if (!genome.get(field)) missingFields.push(field);\n      });\n      if (missingFields.length > 0)\n      throw new Error(\"Genomes file entry \".concat(\n      genomeName, \" is missing required entr\").concat(\n      missingFields.length === 1 ? 'y' : 'ies', \": \").concat(\n      missingFields.join(', ')));\n\n    });return _this;\n  }return GenomesFile;}(RaFile);\n\n\nmodule.exports = GenomesFile;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaStanza = require('./raStanza');\n\n/**\nlass representing a hub.txt file.\nextends RaStanza\nparam {(string|string[])} [hubFile=[]] - A hub.txt file as a string\nthrows {Error} Throws if the first line of the hub.txt file doesn't start\nwith \"hub <hub_name>\", if it has invalid entries, or is missing required\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * entries\nvar\nHubFile = /*#__PURE__*/function (_RaStanza) {(0, _inherits2.default)(HubFile, _RaStanza);var _super = _createSuper(HubFile);\n  function HubFile(hubFile) {var _this;(0, _classCallCheck2.default)(this, HubFile);\n    _this = _super.call(this, hubFile);\n    if (_this.nameKey !== 'hub')\n    throw new Error('Hub file must begin with a line like \"hub <hub_name>\"');\n    var hubTxtFields = [\n    'hub',\n    'shortLabel',\n    'longLabel',\n    'genomesFile',\n    'email',\n    'descriptionUrl'];\n\n    var extraFields = [];\n    _this.forEach(function (value, key) {\n      if (!hubTxtFields.includes(key)) extraFields.push(key);\n    });\n    if (extraFields.length > 0)\n    throw new Error(\"Hub file has invalid entr\".concat(\n\n    extraFields.length === 1 ? 'y' : 'ies', \": \").concat(\n    extraFields.join(', ')));\n\n    var missingFields = [];\n    hubTxtFields.forEach(function (field) {\n      if (field !== 'descriptionUrl' && !_this.get(field))\n      missingFields.push(field);\n    });\n    if (missingFields.length > 0)\n    throw new Error(\"Hub file is missing required entr\".concat(\n\n    missingFields.length === 1 ? 'y' : 'ies', \": \").concat(\n    missingFields.join(', ')));return _this;\n\n  }return HubFile;}(RaStanza);\n\n\nmodule.exports = HubFile;","\"use strict\";var RaFile = require('./raFile');\nvar RaStanza = require('./raStanza');\nvar TrackDbFile = require('./trackDbFile');\nvar HubFile = require('./hubFile');\nvar GenomesFile = require('./genomesFile');\n\nmodule.exports = { RaFile: RaFile, RaStanza: RaStanza, TrackDbFile: TrackDbFile, HubFile: HubFile, GenomesFile: GenomesFile };","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaStanza = require('./raStanza');\n\n/**\nlass representing an ra file. Each file is composed of multiple stanzas, and\neach stanza is separated by one or more blank lines. Each stanza is stored in\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * a Map with the key being the value of the first key-value pair in the stanza.\nhe usual Map methods can be used on the file. An additional method `add()`\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * is available to take a raw line of text and break it up into a key and value\nand add them to the class. This should be favored over `set()` when possible,\nas it performs more validity checks than using `set()`.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * @extends Map\nproperty {undefined|string} nameKey - The key of the first line of all the\nstanzas (`undefined` if the stanza has no lines yet).\nthrows {Error} Throws if an empty stanza is added, if the key in the first\nkey-value pair of each stanze isn't the same, or if two stanzas have the same\nvalue for the key-value pair in their first lines.\nparam {(string|string[])} [raFile=[]] - An ra file, either as a single\nstring or an array of strings with one stanza per entry. Supports both LF\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * and CRLF line terminators.\nparam {object} options\nparam {boolean} options.checkIndent [true] - Check if a the stanzas within\nthe file are indented consistently and keep track of the indentation\nvar\nRaFile = /*#__PURE__*/function (_Map) {(0, _inherits2.default)(RaFile, _Map);var _super = _createSuper(RaFile);\n  function RaFile(raFile) {var _this;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { checkIndent: true };(0, _classCallCheck2.default)(this, RaFile);\n    _this = _super.call(this);var\n    checkIndent = options.checkIndent;\n    _this._checkIndent = checkIndent;\n    var stanzas;\n    if (typeof raFile === 'string') {\n      stanzas = raFile.trimEnd().split(/(?:[\\t ]*\\r?\\n){2,}/);\n    } else if (!raFile) {\n      stanzas = [];\n    } else {\n      stanzas = raFile;\n    }\n    _this._stanzaAndCommentOrder = [];\n    stanzas.forEach(function (stanza) {\n      _this.add(stanza);\n    });return _this;\n  }\n\n  /**\n     * Add a single stanza to the file\n     * @param {string} stanza A single stanza\n     * @returns {RaFile} The RaFile object\n     */(0, _createClass2.default)(RaFile, [{ key: \"add\", value: function add(\n    stanza) {\n      if (stanza === '') throw new Error('Invalid stanza, was empty');\n      if (stanza.trim().startsWith('#')) {\n        var stanzaLines = stanza.\n        trimEnd().\n        split(/\\r?\\n/).\n        map(function (line) {return line.trim();});\n        if (stanzaLines.every(function (line) {return line.startsWith('#');})) {\n          this._stanzaAndCommentOrder.push(stanzaLines.join('\\n'));\n          return this;\n        }\n      }\n      var raStanza = new RaStanza(stanza, { checkIndent: this._checkIndent });\n      if (!this.nameKey) this.nameKey = raStanza.nameKey;else\n      if (raStanza.nameKey !== this.nameKey)\n      throw new Error(\n      'The first line in each stanza must have the same key. ' + \"Saw both \".concat(\n      this.nameKey, \" and \").concat(raStanza.nameKey));\n\n      if (this.has(raStanza.name))\n      throw new Error(\"Got duplicate stanza name: \".concat(raStanza.name));\n      this._stanzaAndCommentOrder.push(raStanza.name);\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"set\", this).call(this, raStanza.name, raStanza);\n    }\n\n    /**\n       * Use `add()` if possible instead of this method. If using this, be aware\n       * that no checks are made for comments, empty stanzas, duplicate keys, etc.\n       * @param {string} key The key of the RaFile stanza\n       * @param {RaStanza} value The RaFile stanza used to replace the prior one\n       */ }, { key: \"update\", value: function update(\n    key, value) {\n      if (!(value instanceof RaStanza))\n      throw new Error(\"Value of \".concat(key, \" is not an RaStanza\"));\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"set\", this).call(this, key, value);\n    }\n\n    /**\n       * Delete a stanza\n       * @param {string} stanza The name of the stanza to delete (the value in its\n       * first key-value pair)\n       * @returns {boolean} true if the deleted stanza existed, false if it did not\n       */ }, { key: \"delete\", value: function _delete(\n    stanza) {\n      if (this._stanzaAndCommentOrder.includes(stanza))\n      this._stanzaAndCommentOrder = this._stanzaAndCommentOrder.filter(\n      function (value) {return value !== stanza;});\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"delete\", this).call(this, stanza);\n    }\n\n    /**\n       * Clear all stanzas and comments\n       */ }, { key: \"clear\", value: function clear()\n    {\n      this._stanzaAndCommentOrder.length = 0;\n      this.nameKey = undefined;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n       * @returns {string} Returns the stanza as a string fit for writing to a ra\n       * file. Original leading indent is preserved. It may not be the same as the\n       * input stanza as lines that were joined with `\\` in the input will be output\n       *  as a single line and all comments will have the same indentations as the\n       * rest of the stanza. Comments between joined lines will move before that\n       * line.\n       */ }, { key: \"toString\", value: function toString()\n    {var _this2 = this;\n      if (this.size === 0) return '';\n      var stanzas = [];\n      this._stanzaAndCommentOrder.forEach(function (entry) {\n        if (entry.startsWith('#')) stanzas.push(\"\".concat(entry, \"\\n\"));else\n        stanzas.push(_this2.get(entry).toString());\n      });\n      return stanzas.join('\\n');\n    } }]);return RaFile;}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Map));\n\n\nmodule.exports = RaFile;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}require('./trimStartEndPolyfills');\n\n/**\nlass representing an ra file stanza. Each stanza line is split into its key\nand value and stored as a Map, so the usual Map methods can be used on the\nstanza. An additional method `add()` is available to take a raw line of text\nand break it up into a key and value and add them to the class. This should\nbe favored over `set()` when possible, as it performs more validity checks\nthan using `set()`.\nextends Map\nproperty {undefined|string} nameKey - The key of the first line of the\nstanza (`undefined` if the stanza has no lines yet).\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       * @property {undefined|string} name - The value of the first line of the\nstanza, by which it is identified in an ra file  (`undefined` if the stanza\nhas no lines yet).\nproperty {undefined|string} indent - The leading indent of the stanza,\nwhich is the same for every line (`undefined` if the stanza has no lines\nyet, `''` if there is no indent).\nthrows {Error} Throws if the stanza has blank lines, if the first line\ndoesn't have both a key and a value, if a key in the stanza is\nduplicated, or if lines in the stanza have inconsistent indentation.\nparam {(string|string[])} [stanza=[]] - An ra file stanza, either as a\nstring or a array of strings with one line per entry. Supports both LF and\nline terminators.\nparam {object} options\nparam {boolean} options.checkIndent [true] - Check if a stanza is indented\nconsistently and keep track of the indentation\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       */var\nRaStanza = /*#__PURE__*/function (_Map) {(0, _inherits2.default)(RaStanza, _Map);var _super = _createSuper(RaStanza);\n  function RaStanza(stanza) {var _this;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { checkIndent: true };(0, _classCallCheck2.default)(this, RaStanza);\n    _this = _super.call(this);var\n    checkIndent = options.checkIndent;\n    _this._checkIndent = checkIndent;\n    var stanzaLines;\n    if (typeof stanza === 'string') {\n      stanzaLines = stanza.trimEnd().split(/\\r?\\n/);\n    } else if (!stanza) {\n      stanzaLines = [];\n    } else {\n      stanzaLines = stanza;\n    }\n    _this._keyAndCommentOrder = [];\n    stanzaLines.forEach(function (line) {\n      _this.add(line);\n    });return _this;\n  }\n\n  /**\n     * Add a single line to the stanza. If the exact line already exists, does\n     * nothing.\n     * @param {string} line A stanza line\n     * @returns {RaStanza} The RaStanza object\n     */(0, _createClass2.default)(RaStanza, [{ key: \"add\", value: function add(\n    line) {\n      if (line === '') throw new Error('Invalid stanza, contained blank lines');\n      if (line.trim().startsWith('#')) {\n        this._keyAndCommentOrder.push(line.trim());\n        return this;\n      }\n      if (line.trimEnd().endsWith('\\\\')) {\n        var _trimmedLine = line.trimEnd().slice(0, -1);\n        if (this._continuedLine) this._continuedLine += _trimmedLine.trimStart();else\n        this._continuedLine = _trimmedLine;\n        return this;\n      }\n      var combinedLine = line;\n      if (this._continuedLine) {\n        combinedLine = this._continuedLine + combinedLine.trimStart();\n        this._continuedLine = undefined;\n      }\n      if (this.indent || this._checkIndent) {\n        var indent = combinedLine.match(/^([ \\t]+)/);\n        if (this.indent === undefined) {\n          if (indent) {var _indent = (0, _slicedToArray2.default)(indent, 2);this.indent = _indent[1];} else\n          this.indent = '';\n        } else if (\n        this.indent === '' && indent !== null ||\n        this.indent && this.indent !== indent[1])\n        {\n          throw new Error('Inconsistent indentation of stanza');\n        }\n      } else {\n        this.indent = '';\n      }\n      var trimmedLine = combinedLine.trim();\n      var sep = trimmedLine.indexOf(' ');\n      if (sep === -1) {\n        if (!this.nameKey)\n        throw new Error(\n        'First line in a stanza must have both a key and a value');\n\n        // Adding a key that already exists and has no value is a no-op\n        if (this.has(trimmedLine)) return this;\n        this._keyAndCommentOrder.push(trimmedLine);\n        return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"set\", this).call(this, trimmedLine, '');\n      }\n      var key = trimmedLine.slice(0, sep);\n      var value = trimmedLine.slice(sep + 1);\n      if (this.has(key) && value !== this.get(key))\n      throw new Error(\n      'Got duplicate key with a different value in stanza: ' + \"\\\"\".concat(\n      key, \"\\\" key has both \").concat(this.get(key), \" and \").concat(value));\n\n      this._keyAndCommentOrder.push(key);\n      if (!this.nameKey) {\n        this.nameKey = key;\n        this.name = trimmedLine.slice(sep + 1);\n      }\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"set\", this).call(this, key, value);\n    }\n\n    /**\n       * Use `add()` if possible instead of this method. If using this, be aware\n       * that no checks are made for comments, indentation, duplicate keys, etc.\n       * @param {string} key The key of the stanza line\n       * @param {string} value The value of the stanza line\n       * @returns {RaStanza} The RaStanza object\n       */ }, { key: \"set\", value: function set(\n    key, value) {\n      if (!(typeof value === 'string'))\n      throw new Error(\"Value of \".concat(key, \" must be a string, got \").concat((0, _typeof2.default)(value)));\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"set\", this).call(this, key, value);\n    }\n\n    /**\n       * Delete a line\n       * @param {string} key The key of the line to delete\n       * @returns {boolean} true if the deleted line existed, false if it did not\n       */ }, { key: \"delete\", value: function _delete(\n    key) {\n      if (key === this.nameKey)\n      throw new Error(\n      'Cannot delete the first line in a stanza (you can still overwrite it with set()).');\n\n      if (this._keyAndCommentOrder.includes(key))\n      this._keyAndCommentOrder = this._keyAndCommentOrder.filter(\n      function (value) {return value !== key;});\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"delete\", this).call(this, key);\n    }\n\n    /**\n       * Clear all lines and comments\n       */ }, { key: \"clear\", value: function clear()\n    {\n      this._keyAndCommentOrder.length = 0;\n      this._continuedLine = undefined;\n      this.indent = undefined;\n      this.name = undefined;\n      this.nameKey = undefined;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n       * @returns {string} Returns the stanza as a string fit for writing to a ra\n       * file. Original leading indent is preserved. It may not be the same as the\n       * input stanza as lines that were joined with `\\` in the input will be output\n       * as a single line and all comments will have the same indentations as the\n       * rest of the stanza. Comments between joined lines will move before that\n       * line.\n       */ }, { key: \"toString\", value: function toString()\n    {var _this2 = this;\n      if (this.size === 0) return '';\n      var lines = [];\n      this._keyAndCommentOrder.forEach(function (entry) {\n        if (entry.startsWith('#')) lines.push(\"\".concat(_this2.indent).concat(entry));else\n        lines.push(\"\".concat(_this2.indent).concat(entry, \" \").concat(_this2.get(entry)).trimEnd());\n      });\n      return \"\".concat(lines.join('\\n'), \"\\n\");\n    } }]);return RaStanza;}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Map));\n\n\nmodule.exports = RaStanza;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaFile = require('./raFile');\n\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * Class representing a genomes.txt file.\nextends RaFile\nparam {(string|string[])} [trackDbFile=[]] - A trackDb.txt file as a string\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * @throws {Error} Throws if \"track\" is not the first key in each track or if a\ntrack is missing required keys\nvar\nTrackDbFile = /*#__PURE__*/function (_RaFile) {(0, _inherits2.default)(TrackDbFile, _RaFile);var _super = _createSuper(TrackDbFile);\n  function TrackDbFile(trackDbFile) {var _this;(0, _classCallCheck2.default)(this, TrackDbFile);\n    _this = _super.call(this, trackDbFile, { checkIndent: false });\n    if (_this.nameKey !== 'track')\n    throw new Error(\"trackDb has \\\"\".concat(\n    _this.nameKey, \"\\\" instead of \\\"track\\\" as the first line in each track\"));\n\n    _this.forEach(function (track, trackName) {\n      var trackKeys = Array.from(track.keys());\n      var missingKeys = [];\n      var requiredKeys = ['track', 'shortLabel'];\n      requiredKeys.forEach(function (key) {\n        if (!trackKeys.includes(key)) missingKeys.push(key);\n      });\n      if (missingKeys.length > 0)\n      throw new Error(\"Track \".concat(\n      trackName, \" is missing required key(s): \").concat(missingKeys.join(\n      ', ')));\n\n\n      var parentTrackKeys = [\n      'superTrack',\n      'compositeTrack',\n      'container',\n      'view'];\n\n      if (!trackKeys.some(function (key) {return parentTrackKeys.includes(key);})) {\n        if (!trackKeys.includes('bigDataUrl'))\n        throw new Error(\"Track \".concat(\n        trackName, \" is missing required key \\\"bigDataUrl\\\"\"));\n\n        if (!trackKeys.includes('type')) {\n          var settings = _this.settings(trackName);\n          var settingsKeys = Array.from(settings.keys());\n          if (!settingsKeys.includes('type'))\n          throw new Error(\"Neither track \".concat(\n          trackName, \" nor any of its parent tracks have the required key \\\"type\\\"\"));\n\n        }\n      }\n      var indent = '';\n      var currentTrackName = trackName;\n      do {\n        currentTrackName = _this.get(currentTrackName).get('parent');\n        if (currentTrackName) {\n          ;var _currentTrackName$spl = currentTrackName.split(' ');var _currentTrackName$spl2 = (0, _slicedToArray2.default)(_currentTrackName$spl, 1);currentTrackName = _currentTrackName$spl2[0];\n          indent += '    ';\n        }\n      } while (currentTrackName);\n      var currentTrack = _this.get(trackName);\n      currentTrack.indent = indent;\n      _this.set(trackName, currentTrack);\n    });return _this;\n  }\n\n  /**\n     * Gets all track entries including those of parent tracks, with closer\n     * entries overriding more distant ones\n     * @param {string} trackName The name of a track\n     * @throws {Error} Throws if track name does not exist in the trackDb\n     */(0, _createClass2.default)(TrackDbFile, [{ key: \"settings\", value: function settings(\n    trackName) {var _this2 = this;\n      if (!this.has(trackName))\n      throw new Error(\"Track \".concat(trackName, \" does not exist\"));\n      var parentTracks = [trackName];\n      var currentTrackName = trackName;\n      do {\n        currentTrackName = this.get(currentTrackName).get('parent');\n        if (currentTrackName) parentTracks.push(currentTrackName);\n      } while (currentTrackName);\n      var settings = new Map();\n      parentTracks.reverse();\n      parentTracks.forEach(function (parentTrack) {\n        _this2.get(parentTrack).forEach(function (value, key) {\n          settings.set(key, value);\n        });\n      });\n      return settings;\n    } }]);return TrackDbFile;}(RaFile);\n\n\nmodule.exports = TrackDbFile;","\"use strict\"; /* eslint-disable no-extend-native */\n/* eslint-disable func-names */\nif (!String.prototype.trimStart) {\n  if (String.prototype.trimLeft) {\n    String.prototype.trimStart = String.prototype.trimLeft;\n  } else {\n    String.prototype.trimStart = function () {\n      return this.replace(/^[\\s\\uFEFF\\xA0]+/g, '');\n    };\n  }\n}\n\nif (!String.prototype.trimEnd) {\n  if (String.prototype.trimRight) {\n    String.prototype.trimEnd = String.prototype.trimRight;\n  } else {\n    String.prototype.trimEnd = function () {\n      return this.replace(/[\\s\\uFEFF\\xA0]+$/g, '');\n    };\n  }\n}"],"names":[],"sourceRoot":""}