"use strict";
(self["webpackChunktaxonium"] = self["webpackChunktaxonium"] || []).push([["node_modules_jbrowse_plugin-sequence_esm_GCContentAdapter_GCContentAdapter_js"],{

/***/ "./node_modules/@jbrowse/plugin-sequence/esm/GCContentAdapter/GCContentAdapter.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@jbrowse/plugin-sequence/esm/GCContentAdapter/GCContentAdapter.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ default_1; }
/* harmony export */ });
/* harmony import */ var _jbrowse_core_data_adapters_BaseAdapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jbrowse/core/data_adapters/BaseAdapter */ "./node_modules/@jbrowse/core/data_adapters/BaseAdapter.js");
/* harmony import */ var _jbrowse_core_data_adapters_BaseAdapter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_jbrowse_core_data_adapters_BaseAdapter__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _jbrowse_core_util_rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jbrowse/core/util/rxjs */ "./node_modules/@jbrowse/core/util/rxjs.js");
/* harmony import */ var _jbrowse_core_util_simpleFeature__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jbrowse/core/util/simpleFeature */ "./node_modules/@jbrowse/core/util/simpleFeature.js");
/* harmony import */ var _jbrowse_core_configuration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jbrowse/core/configuration */ "./node_modules/@jbrowse/core/configuration/index.js");
/* harmony import */ var _jbrowse_core_configuration__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_jbrowse_core_configuration__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/internal/operators/toArray.js");





class default_1 extends _jbrowse_core_data_adapters_BaseAdapter__WEBPACK_IMPORTED_MODULE_0__.BaseFeatureDataAdapter {
    constructor() {
        super(...arguments);
        this.windowSize = 1000;
        this.windowDelta = 1000;
        this.gcMode = 'content';
    }
    async configure() {
        var _a;
        // instantiate the sequence adapter
        const sequenceAdapter = (0,_jbrowse_core_configuration__WEBPACK_IMPORTED_MODULE_3__.readConfObject)(this.config, 'sequenceAdapter');
        const dataAdapter = await ((_a = this.getSubAdapter) === null || _a === void 0 ? void 0 : _a.call(this, sequenceAdapter));
        if (!dataAdapter) {
            throw new Error('Error getting subadapter');
        }
        return dataAdapter.dataAdapter;
    }
    async getRefNames() {
        const sequenceAdapter = await this.configure();
        return sequenceAdapter.getRefNames();
    }
    /**
     * Fetch features for a certain region
     * @param param -
     * @returns Observable of Feature objects in the region
     */
    getFeatures(query, opts) {
        this.windowSize = 1000;
        this.windowDelta = 1000;
        this.gcMode = 'content';
        return (0,_jbrowse_core_util_rxjs__WEBPACK_IMPORTED_MODULE_1__.ObservableCreate)(async (observer) => {
            var _a;
            const sequenceAdapter = await this.configure();
            const hw = this.windowSize === 1 ? 1 : this.windowSize / 2; // Half the window size
            const f = this.windowSize === 1;
            let { start: queryStart, end: queryEnd } = query;
            queryStart = Math.max(0, queryStart - hw);
            queryEnd += hw;
            if (queryEnd < 0 || queryStart > queryEnd) {
                observer.complete();
                return;
            }
            const ret = sequenceAdapter.getFeatures({
                ...query,
                start: queryStart,
                end: queryEnd,
            });
            const feats = await ret.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.toArray)()).toPromise();
            const residues = ((_a = feats[0]) === null || _a === void 0 ? void 0 : _a.get('seq')) || '';
            for (let i = hw; i < residues.length - hw; i += this.windowDelta) {
                const r = f ? residues[i] : residues.slice(i - hw, i + hw);
                let nc = 0;
                let ng = 0;
                let len = 0;
                for (let j = 0; j < r.length; j++) {
                    if (r[j] === 'c' || r[j] === 'C') {
                        nc++;
                    }
                    else if (r[j] === 'g' || r[j] === 'G') {
                        ng++;
                    }
                    if (r[j] !== 'N') {
                        len++;
                    }
                }
                const pos = queryStart;
                let score;
                if (this.gcMode === 'content') {
                    score = (ng + nc) / (len || 1);
                }
                else if (this.gcMode === 'skew') {
                    score = (ng - nc) / (ng + nc || 1);
                }
                observer.next(new _jbrowse_core_util_simpleFeature__WEBPACK_IMPORTED_MODULE_2__["default"]({
                    uniqueId: `${this.id}_${pos + i}`,
                    start: pos + i,
                    end: pos + i + this.windowDelta,
                    score,
                }));
            }
            observer.complete();
        });
    }
    /**
     * called to provide a hint that data tied to a certain region
     * will not be needed for the forseeable future and can be purged
     * from caches, etc
     */
    freeResources( /* { region } */) { }
}
default_1.capabilities = ['hasLocalStats'];
//# sourceMappingURL=GCContentAdapter.js.map

/***/ })

}]);
//# sourceMappingURL=node_modules_jbrowse_plugin-sequence_esm_GCContentAdapter_GCContentAdapter_js.bundle.js.map