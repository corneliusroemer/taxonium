{"version":3,"file":"node_modules_jbrowse_plugin-data-management_esm_HierarchicalTrackSelectorWidget_components_To-5edb64.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA0B;AACqH;AACpG;AACO;AACZ;AACwB;AAC9D,kBAAkB,yDAAU;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD,kCAAkC,sDAAsD;AACxF,YAAY,UAAU;AACtB,YAAY,mDAAmD;AAC/D;AACA,oCAAoC,2EAAc;AAClD;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,gDAAmB,CAAC,qDAAM,IAAI,kDAAkD;AAC5F,QAAQ,gDAAmB,CAAC,qDAAW;AACvC;AACA,YAAY,gDAAmB,CAAC,qDAAU,IAAI,8DAA8D;AAC5G,gBAAgB,gDAAmB,CAAC,iEAAS;AAC7C,QAAQ,gDAAmB,CAAC,qDAAa;AACzC,YAAY,gDAAmB,CAAC,qDAAU;AAC1C,YAAY,gDAAmB,UAAU,wCAAwC;AACjF;AACA,iCAAiC,2EAAc;AAC/C;AACA,4BAA4B,gDAAmB,CAAC,qDAAgB,IAAI,iCAAiC,gDAAmB,CAAC,sDAAQ,IAAI;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB,gBAAgB;AACjE,iBAAiB;AACjB,uDAAuD,gDAAmB,CAAC,qDAAU;AACrF;AACA;AACA,QAAQ,gDAAmB,CAAC,sDAAa;AACzC,YAAY,gDAAmB,CAAC,sDAAM,IAAI,sEAAsE;AAChH;AACA,+DAAe,qDAAQ,wBAAwB,EAAC;AAChD","sources":["webpack://taxonium/./node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/ToggleConnectionsDialog.js"],"sourcesContent":["import React from 'react';\nimport { Button, Checkbox, Dialog, DialogTitle, DialogContent, DialogActions, FormControlLabel, IconButton, Typography, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { observer } from 'mobx-react';\nimport { readConfObject, } from '@jbrowse/core/configuration';\nconst useStyles = makeStyles()(theme => ({\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    connectionContainer: {\n        width: 500,\n        margin: theme.spacing(4),\n    },\n}));\nfunction ToggleConnectionDialog({ session, handleClose, assemblyName, breakConnection, }) {\n    const { classes } = useStyles();\n    const { connections, connectionInstances: instances = [] } = session;\n    const assemblySpecificConnections = connections.filter(c => {\n        const configAssemblyNames = readConfObject(c, 'assemblyNames');\n        if (configAssemblyNames.length === 0) {\n            return true;\n        }\n        return configAssemblyNames.includes(assemblyName);\n    });\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, maxWidth: \"lg\" },\n        React.createElement(DialogTitle, null,\n            \"Turn on/off connections\",\n            React.createElement(IconButton, { className: classes.closeButton, onClick: () => handleClose() },\n                React.createElement(CloseIcon, null))),\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Use the checkbox to turn on/off connections\"),\n            React.createElement(\"div\", { className: classes.connectionContainer },\n                assemblySpecificConnections.map(conf => {\n                    const name = readConfObject(conf, 'name');\n                    const found = instances.find(conn => name === conn.name);\n                    return (React.createElement(FormControlLabel, { key: conf.connectionId, control: React.createElement(Checkbox, { checked: !!found, onChange: () => {\n                                var _a;\n                                if (found) {\n                                    breakConnection(conf);\n                                }\n                                else {\n                                    (_a = session.makeConnection) === null || _a === void 0 ? void 0 : _a.call(session, conf);\n                                }\n                            }, color: \"primary\" }), label: name }));\n                }),\n                !assemblySpecificConnections.length ? (React.createElement(Typography, null,\n                    \"No connections found for \",\n                    assemblyName)) : null)),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => handleClose(), variant: \"contained\", color: \"primary\" }, \"Close\"))));\n}\nexport default observer(ToggleConnectionDialog);\n//# sourceMappingURL=ToggleConnectionsDialog.js.map"],"names":[],"sourceRoot":""}