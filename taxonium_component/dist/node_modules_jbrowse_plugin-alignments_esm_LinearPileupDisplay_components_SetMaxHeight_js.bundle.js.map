{"version":3,"file":"node_modules_jbrowse_plugin-alignments_esm_LinearPileupDisplay_components_SetMaxHeight_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAwC;AACF;AACwF;AACnF;AACO;AAClD,kBAAkB,yDAAU;AAC5B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA,YAAY,qBAAqB;AACjC,YAAY,UAAU;AACtB,YAAY,iBAAiB;AAC7B,0BAA0B,+CAAQ,IAAI,UAAU;AAChD,YAAY,gDAAmB,CAAC,qDAAM,IAAI,kCAAkC;AAC5E,QAAQ,gDAAmB,CAAC,qDAAW;AACvC;AACA,YAAY,gDAAmB,CAAC,qDAAU,IAAI,6EAA6E;AAC3H,gBAAgB,gDAAmB,CAAC,iEAAS;AAC7C,QAAQ,gDAAmB,CAAC,qDAAa,IAAI,yBAAyB;AACtE,YAAY,gDAAmB,CAAC,qDAAU;AAC1C,YAAY,gDAAmB,CAAC,qDAAS,IAAI;AAC7C;AACA,iBAAiB,8CAA8C;AAC/D,YAAY,gDAAmB,CAAC,qDAAa;AAC7C,gBAAgB,gDAAmB,CAAC,sDAAM,IAAI;AAC9C;AACA;AACA,uBAAuB;AACvB,gBAAgB,gDAAmB,CAAC,sDAAM,IAAI,wEAAwE;AACtH;AACA,+DAAe,qDAAQ,iBAAiB,EAAC;AACzC","sources":["webpack://taxonium/./node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/SetMaxHeight.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField, Typography, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport CloseIcon from '@mui/icons-material/Close';\nconst useStyles = makeStyles()(theme => ({\n    root: {\n        width: 500,\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    field: {\n        margin: theme.spacing(2),\n    },\n}));\nfunction SetMaxHeightDlg(props) {\n    const { model, handleClose } = props;\n    const { classes } = useStyles();\n    const { maxHeight = '' } = model;\n    const [max, setMax] = useState(`${maxHeight}`);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose },\n        React.createElement(DialogTitle, null,\n            \"Filter options\",\n            React.createElement(IconButton, { \"aria-label\": \"close\", className: classes.closeButton, onClick: handleClose },\n                React.createElement(CloseIcon, null))),\n        React.createElement(DialogContent, { className: classes.root },\n            React.createElement(Typography, null, \"Set max height for the track. For example, you can increase this if the layout says \\\"Max height reached\\\"\"),\n            React.createElement(TextField, { value: max, onChange: event => {\n                    setMax(event.target.value);\n                }, placeholder: \"Enter max height for layout\" }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, onClick: () => {\n                        model.setMaxHeight(max !== '' && !Number.isNaN(+max) ? +max : undefined);\n                        handleClose();\n                    } }, \"Submit\"),\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => handleClose() }, \"Cancel\")))));\n}\nexport default observer(SetMaxHeightDlg);\n//# sourceMappingURL=SetMaxHeight.js.map"],"names":[],"sourceRoot":""}