{"version":3,"file":"node_modules_jbrowse_plugin-data-management_esm_HierarchicalTrackSelectorWidget_components_Ma-d1af90.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA0B;AACkG;AACjF;AACO;AACZ;AACwB;AAC9D,kBAAkB,yDAAU;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD,gCAAgC,wCAAwC;AACxE,YAAY,UAAU;AACtB,YAAY,6CAA6C;AACzD,YAAY,gDAAmB,CAAC,qDAAM,IAAI,kDAAkD;AAC5F,QAAQ,gDAAmB,CAAC,qDAAW;AACvC;AACA,YAAY,gDAAmB,CAAC,qDAAU,IAAI,8DAA8D;AAC5G,gBAAgB,gDAAmB,CAAC,iEAAS;AAC7C,QAAQ,gDAAmB,CAAC,qDAAa;AACzC,YAAY,gDAAmB,CAAC,qDAAU;AAC1C,YAAY,gDAAmB,UAAU,wCAAwC;AACjF;AACA,iCAAiC,2EAAc;AAC/C,4BAA4B,gDAAmB,UAAU,aAAa,KAAK,GAAG;AAC9E,wBAAwB,gDAAmB,CAAC,qDAAU;AACtD,wJAAwJ,gDAAmB,CAAC,qDAAU,IAAI,4CAA4C;AACtO,gCAAgC,gDAAmB,CAAC,iEAAS,IAAI,gBAAgB,OAAO,gDAAmB,CAAC,qDAAO,IAAI,uEAAuE;AAC9L,gCAAgC,gDAAmB,CAAC,qDAAU;AAC9D,oCAAoC,gDAAmB,CAAC,iEAAS,IAAI,mBAAmB;AACxF;AACA,iBAAiB;AACjB,uCAAuC,gDAAmB,CAAC,qDAAU;AACrE,QAAQ,gDAAmB,CAAC,sDAAa;AACzC,YAAY,gDAAmB,CAAC,sDAAM,IAAI,sEAAsE;AAChH;AACA,+DAAe,qDAAQ,sBAAsB,EAAC;AAC9C","sources":["webpack://taxonium/./node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/ManageConnectionsDialog.js"],"sourcesContent":["import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton, Tooltip, Typography, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { observer } from 'mobx-react';\nimport { readConfObject, } from '@jbrowse/core/configuration';\nconst useStyles = makeStyles()(theme => ({\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    connectionContainer: {\n        margin: theme.spacing(4),\n        width: 500,\n    },\n}));\nfunction ManageConnectionsDlg({ session, handleClose, breakConnection, }) {\n    const { classes } = useStyles();\n    const { adminMode, connections, sessionConnections } = session;\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, maxWidth: \"lg\" },\n        React.createElement(DialogTitle, null,\n            \"Delete connections\",\n            React.createElement(IconButton, { className: classes.closeButton, onClick: () => handleClose() },\n                React.createElement(CloseIcon, null))),\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Click the X icon to delete the connection from your config completely\"),\n            React.createElement(\"div\", { className: classes.connectionContainer },\n                connections.map(conf => {\n                    const name = readConfObject(conf, 'name');\n                    return (React.createElement(\"div\", { key: `conn-${name}` },\n                        React.createElement(Typography, null,\n                            adminMode || (sessionConnections === null || sessionConnections === void 0 ? void 0 : sessionConnections.includes(conf)) ? (React.createElement(IconButton, { onClick: () => breakConnection(conf, true) },\n                                React.createElement(CloseIcon, { color: \"error\" }))) : (React.createElement(Tooltip, { title: \"Unable to delete connection in config file as non-admin user\" },\n                                React.createElement(IconButton, null,\n                                    React.createElement(CloseIcon, { color: \"disabled\" })))),\n                            name)));\n                }),\n                !connections.length ? (React.createElement(Typography, null, \"No connections found\")) : null)),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => handleClose(), variant: \"contained\", color: \"primary\" }, \"Close\"))));\n}\nexport default observer(ManageConnectionsDlg);\n//# sourceMappingURL=ManageConnectionsDialog.js.map"],"names":[],"sourceRoot":""}