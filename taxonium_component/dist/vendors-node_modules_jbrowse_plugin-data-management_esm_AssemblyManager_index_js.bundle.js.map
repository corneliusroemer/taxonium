{"version":3,"file":"vendors-node_modules_jbrowse_plugin-data-management_esm_AssemblyManager_index_js.bundle.js","mappings":"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","sources":["webpack://taxonium/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/AssemblyAddForm.js","webpack://taxonium/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/AssemblyEditor.js","webpack://taxonium/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/AssemblyManager.js","webpack://taxonium/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/AssemblyTable.js","webpack://taxonium/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/index.js","webpack://taxonium/./node_modules/@mui/icons-material/Add.js","webpack://taxonium/./node_modules/@mui/icons-material/ArrowBackIos.js","webpack://taxonium/./node_modules/@mui/icons-material/Create.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport FileSelector from '@jbrowse/core/ui/FileSelector';\nimport { Button, Grid, MenuItem, Paper, TextField } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport AddIcon from '@mui/icons-material/Add';\nconst useStyles = makeStyles()(theme => ({\n    root: {\n        flexGrow: 1,\n        overflow: 'hidden',\n        padding: theme.spacing(0, 3),\n    },\n    paper: {\n        margin: `${theme.spacing(1)}px auto`,\n        padding: theme.spacing(2),\n    },\n    createButton: {\n        marginTop: '1em',\n        justifyContent: 'center',\n    },\n    paperContent: {\n        flex: 'auto',\n        margin: `${theme.spacing(1)}px auto`,\n        padding: theme.spacing(1),\n        overflow: 'auto',\n    },\n}));\nconst AdapterSelector = observer(({ adapterSelection, setAdapterSelection, adapterTypes, }) => {\n    return (React.createElement(TextField, { value: adapterSelection, label: \"Type\", select: true, helperText: \"Type of adapter to use\", fullWidth: true, onChange: event => {\n            setAdapterSelection(event.target.value);\n        } }, adapterTypes.map(str => (React.createElement(MenuItem, { key: str, value: str }, str)))));\n});\nconst AdapterInput = observer(({ adapterSelection, fastaLocation, setFastaLocation, faiLocation, setFaiLocation, gziLocation, setGziLocation, twoBitLocation, setTwoBitLocation, chromSizesLocation, setChromSizesLocation, }) => {\n    if (adapterSelection === 'IndexedFastaAdapter' ||\n        adapterSelection === 'BgzipFastaAdapter') {\n        return (React.createElement(Grid, { container: true, spacing: 2 },\n            React.createElement(Grid, { item: true },\n                React.createElement(FileSelector, { name: \"fastaLocation\", location: fastaLocation, setLocation: loc => setFastaLocation(loc) })),\n            React.createElement(Grid, { item: true },\n                React.createElement(FileSelector, { name: \"faiLocation\", location: faiLocation, setLocation: loc => setFaiLocation(loc) })),\n            adapterSelection === 'BgzipFastaAdapter' ? (React.createElement(Grid, { item: true },\n                React.createElement(FileSelector, { name: \"gziLocation\", location: gziLocation, setLocation: loc => setGziLocation(loc) }))) : null));\n    }\n    if (adapterSelection === 'TwoBitAdapter') {\n        return (React.createElement(Grid, { container: true, spacing: 2 },\n            React.createElement(Grid, { item: true },\n                React.createElement(FileSelector, { name: \"twoBitLocation\", location: twoBitLocation, setLocation: loc => setTwoBitLocation(loc) })),\n            React.createElement(Grid, { item: true },\n                React.createElement(FileSelector, { name: \"chromSizesLocation (optional, can be added to speed up loading 2bit files with many contigs)\", location: chromSizesLocation, setLocation: loc => setChromSizesLocation(loc) }))));\n    }\n    return null;\n});\nconst blank = { uri: '' };\nconst AssemblyAddForm = observer(({ rootModel, setFormOpen, }) => {\n    const { classes } = useStyles();\n    const adapterTypes = [\n        'IndexedFastaAdapter',\n        'BgzipFastaAdapter',\n        'TwoBitAdapter',\n    ];\n    const [assemblyName, setAssemblyName] = useState('');\n    const [assemblyDisplayName, setAssemblyDisplayName] = useState('');\n    const [adapterSelection, setAdapterSelection] = useState(adapterTypes[0]);\n    const [fastaLocation, setFastaLocation] = useState(blank);\n    const [faiLocation, setFaiLocation] = useState(blank);\n    const [gziLocation, setGziLocation] = useState(blank);\n    const [twoBitLocation, setTwoBitLocation] = useState(blank);\n    const [chromSizesLocation, setChromSizesLocation] = useState(blank);\n    function createAssembly() {\n        if (assemblyName === '') {\n            rootModel.session.notify(\"Can't create an assembly without a name\");\n        }\n        else {\n            setFormOpen(false);\n            let newAssembly;\n            if (adapterSelection === 'IndexedFastaAdapter') {\n                newAssembly = {\n                    name: assemblyName,\n                    displayName: assemblyDisplayName,\n                    sequence: {\n                        adapter: {\n                            type: 'IndexedFastaAdapter',\n                            fastaLocation,\n                            faiLocation,\n                        },\n                    },\n                };\n            }\n            else if (adapterSelection === 'BgzipFastaAdapter') {\n                newAssembly = {\n                    name: assemblyName,\n                    displayName: assemblyDisplayName,\n                    sequence: {\n                        adapter: {\n                            type: 'BgzipFastaAdapter',\n                            fastaLocation,\n                            faiLocation,\n                            gziLocation,\n                        },\n                    },\n                };\n            }\n            else if (adapterSelection === 'TwoBitAdapter') {\n                newAssembly = {\n                    name: assemblyName,\n                    displayName: assemblyDisplayName,\n                    sequence: {\n                        adapter: {\n                            type: 'TwoBitAdapter',\n                            twoBitLocation,\n                            chromSizesLocation,\n                        },\n                    },\n                };\n            }\n            rootModel.jbrowse.addAssemblyConf(newAssembly);\n            rootModel.session.notify(`Successfully added ${assemblyName} assembly to JBrowse 2`, 'success');\n        }\n    }\n    return (React.createElement(\"div\", { className: classes.root },\n        React.createElement(Paper, { className: classes.paper },\n            React.createElement(TextField, { id: \"assembly-name\", inputProps: { 'data-testid': 'assembly-name' }, label: \"Assembly name\", helperText: \"The assembly name e.g. hg38\", variant: \"outlined\", value: assemblyName, onChange: event => setAssemblyName(event.target.value) }),\n            React.createElement(TextField, { id: \"assembly-name\", inputProps: { 'data-testid': 'assembly-display-name' }, label: \"Assembly display name\", helperText: 'A human readable display name for the assembly e.g. \"Homo sapiens (hg38)\"', variant: \"outlined\", value: assemblyDisplayName, onChange: event => setAssemblyDisplayName(event.target.value) }),\n            React.createElement(AdapterSelector, { adapterSelection: adapterSelection, setAdapterSelection: setAdapterSelection, adapterTypes: adapterTypes }),\n            React.createElement(\"div\", { className: classes.paperContent },\n                React.createElement(AdapterInput, { adapterSelection: adapterSelection, fastaLocation: fastaLocation, setFastaLocation: setFastaLocation, faiLocation: faiLocation, setFaiLocation: setFaiLocation, gziLocation: gziLocation, setGziLocation: setGziLocation, twoBitLocation: twoBitLocation, setTwoBitLocation: setTwoBitLocation, chromSizesLocation: chromSizesLocation, setChromSizesLocation: setChromSizesLocation }))),\n        React.createElement(Grid, { container: true, className: classes.createButton },\n            React.createElement(Grid, { item: true },\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", startIcon: React.createElement(AddIcon, null), onClick: createAssembly }, \"Create new assembly\")))));\n});\nexport default AssemblyAddForm;\n//# sourceMappingURL=AssemblyAddForm.js.map","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { ConfigurationEditor } from '@jbrowse/plugin-config';\nconst AssemblyEditor = observer(({ assembly, }) => {\n    return React.createElement(ConfigurationEditor, { model: { target: assembly } });\n});\nexport default AssemblyEditor;\n//# sourceMappingURL=AssemblyEditor.js.map","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, } from '@mui/material';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\nimport AssemblyTable from './AssemblyTable';\nimport AssemblyAddForm from './AssemblyAddForm';\nimport AssemblyEditor from './AssemblyEditor';\nconst useStyles = makeStyles()(theme => ({\n    titleBox: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        textAlign: 'center',\n    },\n    dialogContent: {\n        width: '100%',\n    },\n    backButton: {\n        color: '#fff',\n        position: 'absolute',\n        left: theme.spacing(4),\n        top: theme.spacing(4),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n}));\nconst AssemblyManager = observer(({ rootModel, onClose, }) => {\n    const { classes } = useStyles();\n    const [isFormOpen, setFormOpen] = useState(false);\n    const [isAssemblyBeingEdited, setIsAssemblyBeingEdited] = useState(false);\n    const [assemblyBeingEdited, setAssemblyBeingEdited] = useState();\n    const showAssemblyTable = !isFormOpen && !isAssemblyBeingEdited;\n    return (React.createElement(Dialog, { open: true, onClose: () => onClose(false) },\n        React.createElement(DialogTitle, { className: classes.titleBox },\n            showAssemblyTable ? 'Assembly manager' : null,\n            isFormOpen ? (React.createElement(React.Fragment, null,\n                React.createElement(IconButton, { \"aria-label\": \"back\", className: classes.backButton, onClick: () => setFormOpen(false) },\n                    React.createElement(ArrowBackIosIcon, null)),\n                \"Add new assembly\")) : null,\n            isAssemblyBeingEdited ? (React.createElement(React.Fragment, null,\n                React.createElement(IconButton, { \"aria-label\": \"back\", className: classes.backButton, onClick: () => setIsAssemblyBeingEdited(false) },\n                    React.createElement(ArrowBackIosIcon, null)),\n                returnAssemblyName(assemblyBeingEdited))) : null,\n            React.createElement(IconButton, { \"aria-label\": \"close\", className: classes.closeButton, onClick: () => onClose(false) },\n                React.createElement(CloseIcon, null))),\n        React.createElement(DialogContent, null,\n            React.createElement(\"div\", { className: classes.dialogContent },\n                showAssemblyTable ? (React.createElement(AssemblyTable, { rootModel: rootModel, setIsAssemblyBeingEdited: setIsAssemblyBeingEdited, setAssemblyBeingEdited: setAssemblyBeingEdited })) : null,\n                isAssemblyBeingEdited ? (React.createElement(AssemblyEditor, { assembly: assemblyBeingEdited })) : null,\n                isFormOpen ? (React.createElement(AssemblyAddForm, { rootModel: rootModel, setFormOpen: setFormOpen })) : null)),\n        React.createElement(DialogActions, null, showAssemblyTable ? (React.createElement(React.Fragment, null,\n            React.createElement(Button, { color: \"secondary\", variant: \"contained\", onClick: () => onClose(false) }, \"Close\"),\n            React.createElement(Button, { variant: \"contained\", color: \"secondary\", startIcon: React.createElement(AddIcon, null), onClick: () => setFormOpen(true) }, \"Add new assembly\"))) : null)));\n});\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction returnAssemblyName(assembly) {\n    if (assembly !== undefined) {\n        return assembly.name;\n    }\n    return null;\n}\nexport default AssemblyManager;\n//# sourceMappingURL=AssemblyManager.js.map","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { readConfObject, } from '@jbrowse/core/configuration';\nconst useStyles = makeStyles()(() => ({\n    table: {\n        minWidth: 500,\n        minHeight: 150,\n    },\n    buttonCell: {\n        padding: 3,\n    },\n    button: {\n        display: 'inline-block',\n        padding: 3,\n        minHeight: 0,\n        minWidth: 0,\n    },\n}));\nconst AssemblyTable = observer(({ rootModel, setIsAssemblyBeingEdited, setAssemblyBeingEdited, }) => {\n    const { classes } = useStyles();\n    function removeAssembly(name) {\n        rootModel.jbrowse.removeAssemblyConf(name);\n    }\n    const rows = rootModel.jbrowse.assemblies.map(assembly => {\n        const name = readConfObject(assembly, 'name');\n        const displayName = readConfObject(assembly, 'displayName');\n        const aliases = readConfObject(assembly, 'aliases');\n        return (React.createElement(TableRow, { key: name },\n            React.createElement(TableCell, null, name),\n            React.createElement(TableCell, null, displayName),\n            React.createElement(TableCell, null, aliases ? aliases.toString() : ''),\n            React.createElement(TableCell, { className: classes.buttonCell },\n                React.createElement(IconButton, { \"data-testid\": `${name}-edit`, className: classes.button, onClick: () => {\n                        setIsAssemblyBeingEdited(true);\n                        setAssemblyBeingEdited(assembly);\n                    } },\n                    React.createElement(CreateIcon, { color: \"primary\" })),\n                React.createElement(IconButton, { \"data-testid\": `${name}-delete`, className: classes.button, onClick: () => {\n                        removeAssembly(name);\n                    } },\n                    React.createElement(DeleteIcon, { color: \"error\" })))));\n    });\n    return (React.createElement(TableContainer, { component: Paper },\n        React.createElement(Table, { className: classes.table },\n            React.createElement(TableHead, null,\n                React.createElement(TableRow, null,\n                    React.createElement(TableCell, null,\n                        React.createElement(Typography, { variant: \"h5\" }, \"Name\")),\n                    React.createElement(TableCell, null,\n                        React.createElement(Typography, { variant: \"h5\" }, \"Display name\")),\n                    React.createElement(TableCell, null,\n                        React.createElement(Typography, { variant: \"h5\" }, \"Aliases\")),\n                    React.createElement(TableCell, null,\n                        React.createElement(Typography, { variant: \"h5\" }, \"Actions\")))),\n            React.createElement(TableBody, null, rows))));\n});\nexport default AssemblyTable;\n//# sourceMappingURL=AssemblyTable.js.map","export { default } from './AssemblyManager';\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.67 3.87 9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\n\nexports.default = _default;"],"names":[],"sourceRoot":""}