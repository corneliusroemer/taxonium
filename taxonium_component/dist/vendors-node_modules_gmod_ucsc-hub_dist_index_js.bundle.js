(self["webpackChunktaxonium"] = self["webpackChunktaxonium"] || []).push([["vendors-node_modules_gmod_ucsc-hub_dist_index_js"],{

/***/ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/***/ (function(module) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/***/ (function(module) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct.js */ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
    module.exports["default"] = module.exports, module.exports.__esModule = true;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/***/ (function(module) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/get.js":
/*!****************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/get.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var superPropBase = __webpack_require__(/*! ./superPropBase.js */ "./node_modules/@babel/runtime/helpers/superPropBase.js");

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get;
    module.exports["default"] = module.exports, module.exports.__esModule = true;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  }

  return _get(target, property, receiver || target);
}

module.exports = _get;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/***/ (function(module) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/inherits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/isNativeFunction.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeFunction.js ***!
  \*****************************************************************/
/***/ (function(module) {

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

module.exports = _isNativeFunction;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/***/ (function(module) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

module.exports = _isNativeReflectConstruct;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js")["default"]);

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized.js */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/***/ (function(module) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  module.exports["default"] = module.exports, module.exports.__esModule = true;
  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/superPropBase.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/superPropBase.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js");

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

module.exports = _superPropBase;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/wrapNativeSuper.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js");

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeFunction = __webpack_require__(/*! ./isNativeFunction.js */ "./node_modules/@babel/runtime/helpers/isNativeFunction.js");

var construct = __webpack_require__(/*! ./construct.js */ "./node_modules/@babel/runtime/helpers/construct.js");

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  };

  module.exports["default"] = module.exports, module.exports.__esModule = true;
  return _wrapNativeSuper(Class);
}

module.exports = _wrapNativeSuper;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/@gmod/ucsc-hub/dist/genomesFile.js":
/*!*********************************************************!*\
  !*** ./node_modules/@gmod/ucsc-hub/dist/genomesFile.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaFile = __webpack_require__(/*! ./raFile */ "./node_modules/@gmod/ucsc-hub/dist/raFile.js");

/**
lass representing a genomes.txt file.
extends RaFile
param {(string|string[])} [genomesFile=[]] - A genomes.txt file as a string
throws {Error} Throws if the first line of the hub.txt file doesn't start
with "genome <genome_name>" or if it has invalid entries
var
GenomesFile = /*#__PURE__*/function (_RaFile) {(0, _inherits2.default)(GenomesFile, _RaFile);var _super = _createSuper(GenomesFile);
  function GenomesFile(genomesFile) {var _this;(0, _classCallCheck2.default)(this, GenomesFile);
    _this = _super.call(this, genomesFile);
    if (_this.nameKey !== 'genome')
    throw new Error(
    'Genomes file must begin with a line like "genome <genome_name>"');


    // TODO: check if genome is hosted by UCSC and if not, require twoBitPath and groups
    var requiredFields = [
    'genome',
    'trackDb'
    // 'twoBitPath',
    // 'groups',
    ];
    _this.forEach(function (genome, genomeName) {
      var missingFields = [];
      requiredFields.forEach(function (field) {
        if (!genome.get(field)) missingFields.push(field);
      });
      if (missingFields.length > 0)
      throw new Error("Genomes file entry ".concat(
      genomeName, " is missing required entr").concat(
      missingFields.length === 1 ? 'y' : 'ies', ": ").concat(
      missingFields.join(', ')));

    });return _this;
  }return GenomesFile;}(RaFile);


module.exports = GenomesFile;

/***/ }),

/***/ "./node_modules/@gmod/ucsc-hub/dist/hubFile.js":
/*!*****************************************************!*\
  !*** ./node_modules/@gmod/ucsc-hub/dist/hubFile.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaStanza = __webpack_require__(/*! ./raStanza */ "./node_modules/@gmod/ucsc-hub/dist/raStanza.js");

/**
lass representing a hub.txt file.
extends RaStanza
param {(string|string[])} [hubFile=[]] - A hub.txt file as a string
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * @throws {Error} Throws if the first line of the hub.txt file doesn't start
with "hub <hub_name>", if it has invalid entries, or is missing required
entries
var
HubFile = /*#__PURE__*/function (_RaStanza) {(0, _inherits2.default)(HubFile, _RaStanza);var _super = _createSuper(HubFile);
  function HubFile(hubFile) {var _this;(0, _classCallCheck2.default)(this, HubFile);
    _this = _super.call(this, hubFile);
    if (_this.nameKey !== 'hub')
    throw new Error('Hub file must begin with a line like "hub <hub_name>"');
    var hubTxtFields = [
    'hub',
    'shortLabel',
    'longLabel',
    'genomesFile',
    'email',
    'descriptionUrl'];

    var extraFields = [];
    _this.forEach(function (value, key) {
      if (!hubTxtFields.includes(key)) extraFields.push(key);
    });
    if (extraFields.length > 0)
    throw new Error("Hub file has invalid entr".concat(

    extraFields.length === 1 ? 'y' : 'ies', ": ").concat(
    extraFields.join(', ')));

    var missingFields = [];
    hubTxtFields.forEach(function (field) {
      if (field !== 'descriptionUrl' && !_this.get(field))
      missingFields.push(field);
    });
    if (missingFields.length > 0)
    throw new Error("Hub file is missing required entr".concat(

    missingFields.length === 1 ? 'y' : 'ies', ": ").concat(
    missingFields.join(', ')));return _this;

  }return HubFile;}(RaStanza);


module.exports = HubFile;

/***/ }),

/***/ "./node_modules/@gmod/ucsc-hub/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@gmod/ucsc-hub/dist/index.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var RaFile = __webpack_require__(/*! ./raFile */ "./node_modules/@gmod/ucsc-hub/dist/raFile.js");
var RaStanza = __webpack_require__(/*! ./raStanza */ "./node_modules/@gmod/ucsc-hub/dist/raStanza.js");
var TrackDbFile = __webpack_require__(/*! ./trackDbFile */ "./node_modules/@gmod/ucsc-hub/dist/trackDbFile.js");
var HubFile = __webpack_require__(/*! ./hubFile */ "./node_modules/@gmod/ucsc-hub/dist/hubFile.js");
var GenomesFile = __webpack_require__(/*! ./genomesFile */ "./node_modules/@gmod/ucsc-hub/dist/genomesFile.js");

module.exports = { RaFile: RaFile, RaStanza: RaStanza, TrackDbFile: TrackDbFile, HubFile: HubFile, GenomesFile: GenomesFile };

/***/ }),

/***/ "./node_modules/@gmod/ucsc-hub/dist/raFile.js":
/*!****************************************************!*\
  !*** ./node_modules/@gmod/ucsc-hub/dist/raFile.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));var _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "./node_modules/@babel/runtime/helpers/get.js"));var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ "./node_modules/@babel/runtime/helpers/wrapNativeSuper.js"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaStanza = __webpack_require__(/*! ./raStanza */ "./node_modules/@gmod/ucsc-hub/dist/raStanza.js");

/**
lass representing an ra file. Each file is composed of multiple stanzas, and
each stanza is separated by one or more blank lines. Each stanza is stored in
a Map with the key being the value of the first key-value pair in the stanza.
he usual Map methods can be used on the file. An additional method `add()`
is available to take a raw line of text and break it up into a key and value
and add them to the class. This should be favored over `set()` when possible,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * as it performs more validity checks than using `set()`.
extends Map
property {undefined|string} nameKey - The key of the first line of all the
stanzas (`undefined` if the stanza has no lines yet).
throws {Error} Throws if an empty stanza is added, if the key in the first
key-value pair of each stanze isn't the same, or if two stanzas have the same
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * value for the key-value pair in their first lines.
param {(string|string[])} [raFile=[]] - An ra file, either as a single
string or an array of strings with one stanza per entry. Supports both LF
and CRLF line terminators.
param {object} options
param {boolean} options.checkIndent [true] - Check if a the stanzas within
the file are indented consistently and keep track of the indentation
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           */var
RaFile = /*#__PURE__*/function (_Map) {(0, _inherits2.default)(RaFile, _Map);var _super = _createSuper(RaFile);
  function RaFile(raFile) {var _this;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { checkIndent: true };(0, _classCallCheck2.default)(this, RaFile);
    _this = _super.call(this);var
    checkIndent = options.checkIndent;
    _this._checkIndent = checkIndent;
    var stanzas;
    if (typeof raFile === 'string') {
      stanzas = raFile.trimEnd().split(/(?:[\t ]*\r?\n){2,}/);
    } else if (!raFile) {
      stanzas = [];
    } else {
      stanzas = raFile;
    }
    _this._stanzaAndCommentOrder = [];
    stanzas.forEach(function (stanza) {
      _this.add(stanza);
    });return _this;
  }

  /**
     * Add a single stanza to the file
     * @param {string} stanza A single stanza
     * @returns {RaFile} The RaFile object
     */(0, _createClass2.default)(RaFile, [{ key: "add", value: function add(
    stanza) {
      if (stanza === '') throw new Error('Invalid stanza, was empty');
      if (stanza.trim().startsWith('#')) {
        var stanzaLines = stanza.
        trimEnd().
        split(/\r?\n/).
        map(function (line) {return line.trim();});
        if (stanzaLines.every(function (line) {return line.startsWith('#');})) {
          this._stanzaAndCommentOrder.push(stanzaLines.join('\n'));
          return this;
        }
      }
      var raStanza = new RaStanza(stanza, { checkIndent: this._checkIndent });
      if (!this.nameKey) this.nameKey = raStanza.nameKey;else
      if (raStanza.nameKey !== this.nameKey)
      throw new Error(
      'The first line in each stanza must have the same key. ' + "Saw both ".concat(
      this.nameKey, " and ").concat(raStanza.nameKey));

      if (this.has(raStanza.name))
      throw new Error("Got duplicate stanza name: ".concat(raStanza.name));
      this._stanzaAndCommentOrder.push(raStanza.name);
      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), "set", this).call(this, raStanza.name, raStanza);
    }

    /**
       * Use `add()` if possible instead of this method. If using this, be aware
       * that no checks are made for comments, empty stanzas, duplicate keys, etc.
       * @param {string} key The key of the RaFile stanza
       * @param {RaStanza} value The RaFile stanza used to replace the prior one
       */ }, { key: "update", value: function update(
    key, value) {
      if (!(value instanceof RaStanza))
      throw new Error("Value of ".concat(key, " is not an RaStanza"));
      (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), "set", this).call(this, key, value);
    }

    /**
       * Delete a stanza
       * @param {string} stanza The name of the stanza to delete (the value in its
       * first key-value pair)
       * @returns {boolean} true if the deleted stanza existed, false if it did not
       */ }, { key: "delete", value: function _delete(
    stanza) {
      if (this._stanzaAndCommentOrder.includes(stanza))
      this._stanzaAndCommentOrder = this._stanzaAndCommentOrder.filter(
      function (value) {return value !== stanza;});

      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), "delete", this).call(this, stanza);
    }

    /**
       * Clear all stanzas and comments
       */ }, { key: "clear", value: function clear()
    {
      this._stanzaAndCommentOrder.length = 0;
      this.nameKey = undefined;
      (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), "clear", this).call(this);
    }

    /**
       * @returns {string} Returns the stanza as a string fit for writing to a ra
       * file. Original leading indent is preserved. It may not be the same as the
       * input stanza as lines that were joined with `\` in the input will be output
       *  as a single line and all comments will have the same indentations as the
       * rest of the stanza. Comments between joined lines will move before that
       * line.
       */ }, { key: "toString", value: function toString()
    {var _this2 = this;
      if (this.size === 0) return '';
      var stanzas = [];
      this._stanzaAndCommentOrder.forEach(function (entry) {
        if (entry.startsWith('#')) stanzas.push("".concat(entry, "\n"));else
        stanzas.push(_this2.get(entry).toString());
      });
      return stanzas.join('\n');
    } }]);return RaFile;}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Map));


module.exports = RaFile;

/***/ }),

/***/ "./node_modules/@gmod/ucsc-hub/dist/raStanza.js":
/*!******************************************************!*\
  !*** ./node_modules/@gmod/ucsc-hub/dist/raStanza.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));var _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "./node_modules/@babel/runtime/helpers/get.js"));var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ "./node_modules/@babel/runtime/helpers/wrapNativeSuper.js"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}__webpack_require__(/*! ./trimStartEndPolyfills */ "./node_modules/@gmod/ucsc-hub/dist/trimStartEndPolyfills.js");

/**
lass representing an ra file stanza. Each stanza line is split into its key
and value and stored as a Map, so the usual Map methods can be used on the
stanza. An additional method `add()` is available to take a raw line of text
and break it up into a key and value and add them to the class. This should
be favored over `set()` when possible, as it performs more validity checks
than using `set()`.
extends Map
property {undefined|string} nameKey - The key of the first line of the
stanza (`undefined` if the stanza has no lines yet).
property {undefined|string} name - The value of the first line of the
stanza, by which it is identified in an ra file  (`undefined` if the stanza
has no lines yet).
property {undefined|string} indent - The leading indent of the stanza,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       * which is the same for every line (`undefined` if the stanza has no lines
yet, `''` if there is no indent).
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       * @throws {Error} Throws if the stanza has blank lines, if the first line
doesn't have both a key and a value, if a key in the stanza is
duplicated, or if lines in the stanza have inconsistent indentation.
param {(string|string[])} [stanza=[]] - An ra file stanza, either as a
string or a array of strings with one line per entry. Supports both LF and
line terminators.
param {object} options
param {boolean} options.checkIndent [true] - Check if a stanza is indented
consistently and keep track of the indentation
var
RaStanza = /*#__PURE__*/function (_Map) {(0, _inherits2.default)(RaStanza, _Map);var _super = _createSuper(RaStanza);
  function RaStanza(stanza) {var _this;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { checkIndent: true };(0, _classCallCheck2.default)(this, RaStanza);
    _this = _super.call(this);var
    checkIndent = options.checkIndent;
    _this._checkIndent = checkIndent;
    var stanzaLines;
    if (typeof stanza === 'string') {
      stanzaLines = stanza.trimEnd().split(/\r?\n/);
    } else if (!stanza) {
      stanzaLines = [];
    } else {
      stanzaLines = stanza;
    }
    _this._keyAndCommentOrder = [];
    stanzaLines.forEach(function (line) {
      _this.add(line);
    });return _this;
  }

  /**
     * Add a single line to the stanza. If the exact line already exists, does
     * nothing.
     * @param {string} line A stanza line
     * @returns {RaStanza} The RaStanza object
     */(0, _createClass2.default)(RaStanza, [{ key: "add", value: function add(
    line) {
      if (line === '') throw new Error('Invalid stanza, contained blank lines');
      if (line.trim().startsWith('#')) {
        this._keyAndCommentOrder.push(line.trim());
        return this;
      }
      if (line.trimEnd().endsWith('\\')) {
        var _trimmedLine = line.trimEnd().slice(0, -1);
        if (this._continuedLine) this._continuedLine += _trimmedLine.trimStart();else
        this._continuedLine = _trimmedLine;
        return this;
      }
      var combinedLine = line;
      if (this._continuedLine) {
        combinedLine = this._continuedLine + combinedLine.trimStart();
        this._continuedLine = undefined;
      }
      if (this.indent || this._checkIndent) {
        var indent = combinedLine.match(/^([ \t]+)/);
        if (this.indent === undefined) {
          if (indent) {var _indent = (0, _slicedToArray2.default)(indent, 2);this.indent = _indent[1];} else
          this.indent = '';
        } else if (
        this.indent === '' && indent !== null ||
        this.indent && this.indent !== indent[1])
        {
          throw new Error('Inconsistent indentation of stanza');
        }
      } else {
        this.indent = '';
      }
      var trimmedLine = combinedLine.trim();
      var sep = trimmedLine.indexOf(' ');
      if (sep === -1) {
        if (!this.nameKey)
        throw new Error(
        'First line in a stanza must have both a key and a value');

        // Adding a key that already exists and has no value is a no-op
        if (this.has(trimmedLine)) return this;
        this._keyAndCommentOrder.push(trimmedLine);
        return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), "set", this).call(this, trimmedLine, '');
      }
      var key = trimmedLine.slice(0, sep);
      var value = trimmedLine.slice(sep + 1);
      if (this.has(key) && value !== this.get(key))
      throw new Error(
      'Got duplicate key with a different value in stanza: ' + "\"".concat(
      key, "\" key has both ").concat(this.get(key), " and ").concat(value));

      this._keyAndCommentOrder.push(key);
      if (!this.nameKey) {
        this.nameKey = key;
        this.name = trimmedLine.slice(sep + 1);
      }
      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), "set", this).call(this, key, value);
    }

    /**
       * Use `add()` if possible instead of this method. If using this, be aware
       * that no checks are made for comments, indentation, duplicate keys, etc.
       * @param {string} key The key of the stanza line
       * @param {string} value The value of the stanza line
       * @returns {RaStanza} The RaStanza object
       */ }, { key: "set", value: function set(
    key, value) {
      if (!(typeof value === 'string'))
      throw new Error("Value of ".concat(key, " must be a string, got ").concat((0, _typeof2.default)(value)));
      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), "set", this).call(this, key, value);
    }

    /**
       * Delete a line
       * @param {string} key The key of the line to delete
       * @returns {boolean} true if the deleted line existed, false if it did not
       */ }, { key: "delete", value: function _delete(
    key) {
      if (key === this.nameKey)
      throw new Error(
      'Cannot delete the first line in a stanza (you can still overwrite it with set()).');

      if (this._keyAndCommentOrder.includes(key))
      this._keyAndCommentOrder = this._keyAndCommentOrder.filter(
      function (value) {return value !== key;});

      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), "delete", this).call(this, key);
    }

    /**
       * Clear all lines and comments
       */ }, { key: "clear", value: function clear()
    {
      this._keyAndCommentOrder.length = 0;
      this._continuedLine = undefined;
      this.indent = undefined;
      this.name = undefined;
      this.nameKey = undefined;
      (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), "clear", this).call(this);
    }

    /**
       * @returns {string} Returns the stanza as a string fit for writing to a ra
       * file. Original leading indent is preserved. It may not be the same as the
       * input stanza as lines that were joined with `\` in the input will be output
       * as a single line and all comments will have the same indentations as the
       * rest of the stanza. Comments between joined lines will move before that
       * line.
       */ }, { key: "toString", value: function toString()
    {var _this2 = this;
      if (this.size === 0) return '';
      var lines = [];
      this._keyAndCommentOrder.forEach(function (entry) {
        if (entry.startsWith('#')) lines.push("".concat(_this2.indent).concat(entry));else
        lines.push("".concat(_this2.indent).concat(entry, " ").concat(_this2.get(entry)).trimEnd());
      });
      return "".concat(lines.join('\n'), "\n");
    } }]);return RaStanza;}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Map));


module.exports = RaStanza;

/***/ }),

/***/ "./node_modules/@gmod/ucsc-hub/dist/trackDbFile.js":
/*!*********************************************************!*\
  !*** ./node_modules/@gmod/ucsc-hub/dist/trackDbFile.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaFile = __webpack_require__(/*! ./raFile */ "./node_modules/@gmod/ucsc-hub/dist/raFile.js");

/**
lass representing a genomes.txt file.
extends RaFile
param {(string|string[])} [trackDbFile=[]] - A trackDb.txt file as a string
throws {Error} Throws if "track" is not the first key in each track or if a
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * track is missing required keys
var
TrackDbFile = /*#__PURE__*/function (_RaFile) {(0, _inherits2.default)(TrackDbFile, _RaFile);var _super = _createSuper(TrackDbFile);
  function TrackDbFile(trackDbFile) {var _this;(0, _classCallCheck2.default)(this, TrackDbFile);
    _this = _super.call(this, trackDbFile, { checkIndent: false });
    if (_this.nameKey !== 'track')
    throw new Error("trackDb has \"".concat(
    _this.nameKey, "\" instead of \"track\" as the first line in each track"));

    _this.forEach(function (track, trackName) {
      var trackKeys = Array.from(track.keys());
      var missingKeys = [];
      var requiredKeys = ['track', 'shortLabel'];
      requiredKeys.forEach(function (key) {
        if (!trackKeys.includes(key)) missingKeys.push(key);
      });
      if (missingKeys.length > 0)
      throw new Error("Track ".concat(
      trackName, " is missing required key(s): ").concat(missingKeys.join(
      ', ')));


      var parentTrackKeys = [
      'superTrack',
      'compositeTrack',
      'container',
      'view'];

      if (!trackKeys.some(function (key) {return parentTrackKeys.includes(key);})) {
        if (!trackKeys.includes('bigDataUrl'))
        throw new Error("Track ".concat(
        trackName, " is missing required key \"bigDataUrl\""));

        if (!trackKeys.includes('type')) {
          var settings = _this.settings(trackName);
          var settingsKeys = Array.from(settings.keys());
          if (!settingsKeys.includes('type'))
          throw new Error("Neither track ".concat(
          trackName, " nor any of its parent tracks have the required key \"type\""));

        }
      }
      var indent = '';
      var currentTrackName = trackName;
      do {
        currentTrackName = _this.get(currentTrackName).get('parent');
        if (currentTrackName) {
          ;var _currentTrackName$spl = currentTrackName.split(' ');var _currentTrackName$spl2 = (0, _slicedToArray2.default)(_currentTrackName$spl, 1);currentTrackName = _currentTrackName$spl2[0];
          indent += '    ';
        }
      } while (currentTrackName);
      var currentTrack = _this.get(trackName);
      currentTrack.indent = indent;
      _this.set(trackName, currentTrack);
    });return _this;
  }

  /**
     * Gets all track entries including those of parent tracks, with closer
     * entries overriding more distant ones
     * @param {string} trackName The name of a track
     * @throws {Error} Throws if track name does not exist in the trackDb
     */(0, _createClass2.default)(TrackDbFile, [{ key: "settings", value: function settings(
    trackName) {var _this2 = this;
      if (!this.has(trackName))
      throw new Error("Track ".concat(trackName, " does not exist"));
      var parentTracks = [trackName];
      var currentTrackName = trackName;
      do {
        currentTrackName = this.get(currentTrackName).get('parent');
        if (currentTrackName) parentTracks.push(currentTrackName);
      } while (currentTrackName);
      var settings = new Map();
      parentTracks.reverse();
      parentTracks.forEach(function (parentTrack) {
        _this2.get(parentTrack).forEach(function (value, key) {
          settings.set(key, value);
        });
      });
      return settings;
    } }]);return TrackDbFile;}(RaFile);


module.exports = TrackDbFile;

/***/ }),

/***/ "./node_modules/@gmod/ucsc-hub/dist/trimStartEndPolyfills.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@gmod/ucsc-hub/dist/trimStartEndPolyfills.js ***!
  \*******************************************************************/
/***/ (function() {

"use strict";
 /* eslint-disable no-extend-native */
/* eslint-disable func-names */
if (!String.prototype.trimStart) {
  if (String.prototype.trimLeft) {
    String.prototype.trimStart = String.prototype.trimLeft;
  } else {
    String.prototype.trimStart = function () {
      return this.replace(/^[\s\uFEFF\xA0]+/g, '');
    };
  }
}

if (!String.prototype.trimEnd) {
  if (String.prototype.trimRight) {
    String.prototype.trimEnd = String.prototype.trimRight;
  } else {
    String.prototype.trimEnd = function () {
      return this.replace(/[\s\uFEFF\xA0]+$/g, '');
    };
  }
}

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_gmod_ucsc-hub_dist_index_js.bundle.js.map