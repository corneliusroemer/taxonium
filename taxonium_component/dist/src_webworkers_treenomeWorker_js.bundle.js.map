{"version":3,"file":"src_webworkers_treenomeWorker_js.bundle.js","mappings":"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","sources":["webpack://taxonium/./src/webworkers/treenomeWorker.js"],"sourcesContent":["const pre_order = (nodes) => {\n  let to_children = {};\n  let root_id = null;\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].parent_id === nodes[i].node_id) {\n      root_id = nodes[i].node_id;\n      continue;\n    }\n    if (to_children[nodes[i].parent_id] !== undefined) {\n      to_children[nodes[i].parent_id].push(nodes[i].node_id);\n    } else {\n      to_children[nodes[i].parent_id] = [nodes[i].node_id];\n    }\n  }\n  let stack = [];\n  let po = [];\n  stack.push(root_id);\n  while (stack.length > 0) {\n    const node_id = stack.pop();\n    if (to_children[node_id]) {\n      for (let child_id of to_children[node_id]) {\n        stack.push(child_id);\n      }\n    }\n    po.push(node_id);\n  }\n  return po;\n};\n\nconst computeFilteredVariationData = (variation_data, ntBounds, data) => {\n  if (!data.data || !data.data.nodes || !variation_data) {\n    return [];\n  }\n  if (data.data.nodes.length < 10000 || ntBounds[1] - ntBounds[0] < 1000) {\n    return variation_data;\n  } else {\n    console.log(\"FILTERING\");\n    return variation_data.filter((d) => d.y[1] - d.y[0] > 0.002);\n  }\n};\n\nconst computeYSpan = (preorder_nodes, lookup, root) => {\n  let yspan = {};\n  for (let i = preorder_nodes.length - 1; i >= 0; i--) {\n    // post order\n    let node = lookup[preorder_nodes[i]];\n    if (node.node_id === root) {\n      continue;\n    }\n    let parent = node.parent_id;\n\n    if (!yspan[node.node_id]) {\n      // Leaf\n      yspan[node.node_id] = [node.y, node.y];\n    }\n    let cur_yspan = yspan[node.node_id];\n    let par_yspan = yspan[parent];\n    if (par_yspan) {\n      if (cur_yspan[0] < par_yspan[0]) {\n        yspan[parent][0] = cur_yspan[0];\n      }\n      if (cur_yspan[1] > par_yspan[1]) {\n        yspan[parent][1] = cur_yspan[1];\n      }\n    } else {\n      yspan[parent] = [...cur_yspan];\n    }\n  }\n  return yspan;\n};\n\nconst computeVariationData = async (data, type, ntBounds, jobId) => {\n  // compute in chunks starting at memoIndex\n  let blank = [[], {}, false];\n  let ref = { aa: {}, nt: {} };\n  let shouldCache = false;\n  let nodes = null;\n  let lookup = null;\n  if (data && data.data && data.data.nodes && data.data.nodes.length < 90000) {\n    nodes = data.data.nodes;\n    lookup = data.data.nodeLookup;\n  } else {\n    if (!data.base_data || !data.base_data.nodes) {\n      return blank;\n    }\n    nodes = data.base_data.nodes;\n    lookup = data.base_data.nodeLookup;\n    shouldCache = true;\n  }\n\n  if (!nodes) {\n    return null;\n  }\n  if (!data.data.nodeLookup) {\n    return null;\n  }\n\n  const preorder_nodes = pre_order(nodes);\n  const root = preorder_nodes.find((id) => id === lookup[id].parent_id);\n  for (let mut of lookup[root].mutations) {\n    if (mut.gene === \"nt\") {\n      ref[\"nt\"][mut.residue_pos] = mut.new_residue;\n    } else {\n      ref[\"aa\"][mut.gene + \":\" + mut.residue_pos] = mut.new_residue;\n    }\n  }\n\n  const chunkSize = 10000;\n  const yspan = computeYSpan(preorder_nodes, lookup, root);\n  let var_data = [];\n\n  for (\n    let memoIndex = 0;\n    memoIndex < preorder_nodes.length + chunkSize;\n    memoIndex += chunkSize\n  ) {\n    let this_var_data = [];\n    let i;\n    for (\n      i = memoIndex;\n      i < Math.min(memoIndex + chunkSize, preorder_nodes.length);\n      i++\n    ) {\n      const node = lookup[preorder_nodes[i]];\n      if (node.node_id === root) {\n        continue;\n      }\n      for (let mut of node.mutations) {\n        if (\n          (mut.gene === \"nt\" && type === \"nt\") ||\n          (mut.gene !== \"nt\" && type === \"aa\")\n        ) {\n          this_var_data.push({\n            y: yspan[node.node_id],\n            m: mut,\n          });\n        }\n      }\n    }\n    var_data.push(...this_var_data);\n    let filteredVarData = computeFilteredVariationData(\n      var_data,\n      ntBounds,\n      data\n    );\n    if (i === preorder_nodes.length && shouldCache) {\n      postMessage({\n        type:\n          type === \"aa\"\n            ? \"variation_data_return_cache_aa\"\n            : \"variation_data_return_cache_nt\",\n        filteredVarData: filteredVarData,\n        treenomeReferenceInfo: ref,\n        jobId: jobId,\n      });\n    } else {\n      postMessage({\n        type:\n          type === \"aa\"\n            ? \"variation_data_return_aa\"\n            : \"variation_data_return_nt\",\n        filteredVarData: filteredVarData,\n        treenomeReferenceInfo: ref,\n        jobId: jobId,\n      });\n    }\n  }\n};\n\nonmessage = async (event) => {\n  if (!event.data) {\n    return;\n  }\n  let ntBounds, jobId, data;\n  ({ ntBounds, jobId, data } = event.data);\n\n  if (event.data.type === \"variation_data_aa\") {\n    computeVariationData(data, \"aa\", ntBounds, jobId);\n  } else if (event.data.type === \"variation_data_nt\") {\n    computeVariationData(data, \"nt\", ntBounds, jobId);\n  }\n};\n"],"names":["pre_order","nodes","to_children","root_id","i","length","parent_id","node_id","undefined","push","stack","po","pop","child_id","computeFilteredVariationData","variation_data","ntBounds","data","console","log","filter","d","y","computeYSpan","preorder_nodes","lookup","root","yspan","node","parent","cur_yspan","par_yspan","computeVariationData","type","jobId","blank","ref","aa","nt","shouldCache","nodeLookup","base_data","find","id","mutations","mut","gene","residue_pos","new_residue","chunkSize","var_data","memoIndex","this_var_data","Math","min","m","filteredVarData","postMessage","treenomeReferenceInfo","onmessage","event"],"sourceRoot":""}