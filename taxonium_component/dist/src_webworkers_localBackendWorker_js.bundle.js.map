{"version":3,"file":"src_webworkers_localBackendWorker_js.bundle.js","mappings":"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H,KAFqB,EAG3CpC,IAAI,CAAC+G,MAHsC,CAjEvC;;UAAA;YAiEAgE,QAjEA;YAsENtB,WAAW,CAAC;cAAElE,IAAI,EAAE,YAAR;cAAsBvF,IAAI,EAAE+K;YAA5B,CAAD,CAAX;;UAtEM;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA;IAAA;EAAA;AAAA,GAAT;;;;;;;;;;AC3UA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA,0XAA0X,uEAAuE;UACjc;UACA;UACA;;;;;WCrCA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC,oHAAoH,iDAAiD;WACrK;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA,uDAAuD,qCAAqC,kBAAkB;WAC9G;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG,8DAA8D,wBAAwB,uBAAuB;WAC7G;WACA,+BAA+B;WAC/B;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCtCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack://taxonium/./src/utils/jstree.js","webpack://taxonium/./src/utils/processNewick.js","webpack://taxonium/./src/utils/processNextstrain.js","webpack://taxonium/./src/utils/reduceMaxOrMin.js","webpack://taxonium/./src/webworkers/localBackendWorker.js","webpack://taxonium/ignored|/workspaces/taxonium/taxonium_web_client/node_modules/readable-stream/lib/internal/streams|util","webpack://taxonium/ignored|/workspaces/taxonium/taxonium_web_client/node_modules/readable-stream/lib|util","webpack://taxonium/webpack/bootstrap","webpack://taxonium/webpack/runtime/chunk loaded","webpack://taxonium/webpack/runtime/compat get default export","webpack://taxonium/webpack/runtime/create fake namespace object","webpack://taxonium/webpack/runtime/define property getters","webpack://taxonium/webpack/runtime/ensure chunk","webpack://taxonium/webpack/runtime/get javascript chunk filename","webpack://taxonium/webpack/runtime/global","webpack://taxonium/webpack/runtime/hasOwnProperty shorthand","webpack://taxonium/webpack/runtime/make namespace object","webpack://taxonium/webpack/runtime/node module decorator","webpack://taxonium/webpack/runtime/publicPath","webpack://taxonium/webpack/runtime/importScripts chunk loading","webpack://taxonium/webpack/runtime/startup chunk dependencies","webpack://taxonium/webpack/before-startup","webpack://taxonium/webpack/startup","webpack://taxonium/webpack/after-startup"],"sourcesContent":["/* eslint-disable */\n\n/* The MIT License\n\n   Copyright (c) 2008 Genome Research Ltd (GRL).\n                 2010 Broad Institute\n\n   Permission is hereby granted, free of charge, to any person obtaining\n   a copy of this software and associated documentation files (the\n   \"Software\"), to deal in the Software without restriction, including\n   without limitation the rights to use, copy, modify, merge, publish,\n   distribute, sublicense, and/or sell copies of the Software, and to\n   permit persons to whom the Software is furnished to do so, subject to\n   the following conditions:\n\n   The above copyright notice and this permission notice shall be\n   included in all copies or substantial portions of the Software.\n\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n   BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n   ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n   CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   SOFTWARE.\n*/\n\n// Author: Heng Li <lh3@sanger.ac.uk>\n\n/*\n  A phylogenetic tree is parsed into the following Java-like structure:\n\n  class Node {\n\tNode parent;  // pointer to the parent node; null if root\n\tNode[] child; // array of pointers to child nodes\n\tString name;  // name of the current node\n\tdouble d;     // distance to the parent node\n\tbool hl;      // if the node needs to be highlighted\n\tbool hidden;  // if the node and all its desendants are collapsed\n  };\n\n  class Tree {\n\tNode[] node;  // list of nodes in the finishing order (the leftmost leaf is the first and the root the last)\n\tint error;    // errors in parsing: 0x1=missing left parenthesis; 0x2=missing right; 0x4=unpaired brackets\n\tint n_tips;   // number of tips/leaves in the tree\n  };\n\n  The minimal code for plotting/editing a tree in the Newick format is:\n\n<head><!--[if IE]><script src=\"excanvas.js\"></script><![endif]-->\n<script language=\"JavaScript\" src=\"knhx.js\"></script></head>\n<body onLoad=\"knhx_init('canvas', 'nhx');\">\n<textarea id=\"nhx\" rows=\"20\" cols=\"120\" style=\"font:11px monospace\"></textarea>\n<canvas id=\"canvas\" width=\"800\" height=\"100\" style=\"border:1px solid\"></canvas>\n</body>\n\n*/\n\n/********************************************\n ****** The New Hampshire format parser *****\n ********************************************/\n\nfunction kn_new_node() {\n  // private method\n  return {\n    parent: null,\n    child: [],\n    name: \"\",\n    meta: \"\",\n    d: -1.0,\n    hl: false,\n    hidden: false,\n  };\n}\n\nfunction kn_add_node(str, l, tree, x) {\n  // private method\n  let i;\n  var r,\n    beg,\n    end = 0,\n    z;\n  z = kn_new_node();\n  for (\n    i = l, beg = l;\n    i < str.length && str.charAt(i) != \",\" && str.charAt(i) != \")\";\n    ++i\n  ) {\n    var c = str.charAt(i);\n    if (c == \"[\") {\n      var meta_beg = i;\n      if (end == 0) end = i;\n      do ++i;\n      while (i < str.length && str.charAt(i) != \"]\");\n      if (i == str.length) {\n        tree.error |= 4;\n        break;\n      }\n      z.meta = str.substr(meta_beg, i - meta_beg + 1);\n    } else if (c == \":\") {\n      if (end == 0) end = i;\n      for (var j = ++i; i < str.length; ++i) {\n        var cc = str.charAt(i);\n        if (\n          (cc < \"0\" || cc > \"9\") &&\n          cc != \"e\" &&\n          cc != \"E\" &&\n          cc != \"+\" &&\n          cc != \"-\" &&\n          cc != \".\"\n        )\n          break;\n      }\n      z.d = parseFloat(str.substr(j, i - j));\n      --i;\n    } else if (c < \"!\" && c > \"~\" && end == 0) end = i;\n  }\n  if (end == 0) end = i;\n  if (end > beg) z.name = str.substr(beg, end - beg);\n  tree.node.push(z);\n  return i;\n}\n\n/* Parse a string in the New Hampshire format and return a pointer to the tree. */\nfunction kn_parse(str) {\n  var stack = new Array();\n  var tree = new Object();\n  tree.error = tree.n_tips = 0;\n  tree.node = new Array();\n  for (var l = 0; l < str.length; ) {\n    while (l < str.length && (str.charAt(l) < \"!\" || str.charAt(l) > \"~\")) ++l;\n    if (l == str.length) break;\n    var c = str.charAt(l);\n    if (c == \",\") ++l;\n    else if (c == \"(\") {\n      stack.push(-1);\n      ++l;\n    } else if (c == \")\") {\n      let x, m, i;\n      x = tree.node.length;\n      for (i = stack.length - 1; i >= 0; --i) if (stack[i] < 0) break;\n      if (i < 0) {\n        tree.error |= 1;\n        break;\n      }\n      m = stack.length - 1 - i;\n      l = kn_add_node(str, l + 1, tree, m);\n      for (i = stack.length - 1, m = m - 1; m >= 0; --m, --i) {\n        tree.node[x].child[m] = tree.node[stack[i]];\n        tree.node[stack[i]].parent = tree.node[x];\n      }\n      stack.length = i;\n      stack.push(x);\n    } else {\n      ++tree.n_tips;\n      stack.push(tree.node.length);\n      l = kn_add_node(str, l, tree, 0);\n    }\n  }\n  if (stack.length > 1) tree.error |= 2;\n  tree.root = tree.node[tree.node.length - 1];\n  return tree;\n}\n\n/*********************************\n ***** Output a tree in text *****\n *********************************/\n\n/* convert a tree to the New Hampshire string */\nfunction kn_write_nh(tree) {\n  // calculate the depth of each node\n  tree.node[tree.node.length - 1].depth = 0;\n  for (var i = tree.node.length - 2; i >= 0; --i) {\n    var p = tree.node[i];\n    p.depth = p.parent.depth + 1;\n  }\n  // generate the string\n  var str = \"\";\n  var cur_depth = 0,\n    is_first = 1;\n  for (var i = 0; i < tree.node.length; ++i) {\n    var p = tree.node[i];\n    var n_bra = p.depth - cur_depth;\n    if (n_bra > 0) {\n      if (is_first) is_first = 0;\n      else str += \",\\n\";\n      for (var j = 0; j < n_bra; ++j) str += \"(\";\n    } else if (n_bra < 0) str += \"\\n)\";\n    else str += \",\\n\";\n    if (p.name) str += String(p.name);\n    if (p.d >= 0.0) str += \":\" + p.d;\n    if (p.meta) str += p.meta;\n    cur_depth = p.depth;\n  }\n  str += \"\\n\";\n  return str;\n}\n\n/* print the tree topology (for debugging only) */\nfunction kn_check_tree(tree) {\n  document.write(\"<table border=1><tr><th>name<th>id<th>dist<th>x<th>y</tr>\");\n  for (var i = 0; i < tree.node.length; ++i) {\n    var p = tree.node[i];\n    document.write(\n      \"<tr>\" +\n        \"<td>\" +\n        p.name +\n        \"<td>\" +\n        i +\n        \"<td>\" +\n        p.d +\n        \"<td>\" +\n        p.x +\n        \"<td>\" +\n        p.y +\n        \"</tr>\"\n    );\n  }\n  document.write(\"</table>\");\n}\n\n/**********************************************\n ****** Functions for manipulating a tree *****\n **********************************************/\n\n/* Expand the tree into an array in the finishing order */\nfunction kn_expand_node(root) {\n  var node, stack;\n  node = new Array();\n  stack = new Array();\n  stack.push({ p: root, i: 0 });\n  for (;;) {\n    while (\n      stack[stack.length - 1].i != stack[stack.length - 1].p.child.length &&\n      !stack[stack.length - 1].p.hidden\n    ) {\n      var q = stack[stack.length - 1];\n      stack.push({ p: q.p.child[q.i], i: 0 });\n    }\n    node.push(stack.pop().p);\n    if (stack.length > 0) ++stack[stack.length - 1].i;\n    else break;\n  }\n  return node;\n}\n\n/* Count the number of leaves */\nfunction kn_count_tips(tree) {\n  tree.n_tips = 0;\n  for (var i = 0; i < tree.node.length; ++i)\n    if (tree.node[i].child.length == 0 || tree.node[i].hidden) ++tree.n_tips;\n  return tree.n_tips;\n}\n\n/* Highlight: set node.hl for leaves matching \"pattern\" */\nfunction kn_search_leaf(tree, pattern) {\n  var re = null;\n  if (pattern != null && pattern != \"\") {\n    re = new RegExp(pattern, \"i\");\n    if (re == null) alert(\"Wrong regular expression: '\" + pattern + \"'\");\n  }\n  for (var i = 0; i < tree.node.length; ++i) {\n    var p = tree.node[i];\n    if (p.child.length == 0)\n      p.hl = re != null && re.test(p.name) ? true : false;\n  }\n}\n\n/* Remove: delete a node and all its descendants */\nfunction kn_remove_node(tree, node) {\n  var root = tree.node[tree.node.length - 1];\n  if (node == root) return;\n\n  var z = kn_new_node();\n  z.child.push(root);\n  root.parent = z;\n\n  var p = node.parent,\n    i;\n  if (p.child.length == 2) {\n    // then p will be removed\n    var q,\n      r = p.parent;\n    i = p.child[0] == node ? 0 : 1;\n    q = p.child[1 - i]; // the other child\n    q.d += p.d;\n    q.parent = r;\n    for (let i = 0; i < r.child.length; ++i) if (r.child[i] == p) break;\n    r.child[i] = q;\n    p.parent = null;\n  } else {\n    var j, k;\n    for (let i = 0; i < p.child.length; ++i) if (p.child[i] == node) break;\n    for (j = k = 0; j < p.child.length; ++j) {\n      p.node[k] = p.node[j];\n      if (j != i) ++k;\n    }\n    --p.child.length;\n  }\n\n  root = z.child[0];\n  root.parent = null;\n  return root;\n}\n\n/* Move: prune the subtree descending from p and regragh it to the edge between q and its parent */\nfunction kn_move_node(tree, p, q) {\n  var root = tree.node[tree.node.length - 1];\n  if (p == root) return null; // p cannot be root\n  for (var r = q; r.parent; r = r.parent) if (r == p) return null; // p is an ancestor of q. We cannot move in this case.\n\n  root = kn_remove_node(tree, p);\n\n  var z = kn_new_node(); // a fake root\n  z.child.push(root);\n  root.parent = z;\n\n  var i,\n    r = q.parent;\n  for (let i = 0; i < r.child.length; ++i) if (r.child[i] == q) break;\n  var s = kn_new_node(); // a new node\n  s.parent = r;\n  r.child[i] = s;\n  if (q.d >= 0.0) {\n    s.d = q.d / 2.0;\n    q.d /= 2.0;\n  }\n  s.child.push(p);\n  p.parent = s;\n  s.child.push(q);\n  q.parent = s;\n\n  root = z.child[0];\n  root.parent = null;\n  return root;\n}\n\n/* Reroot: put the root in the middle of node and its parent */\nfunction kn_reroot(root, node, dist) {\n  var i, d, tmp;\n  var p, q, r, s, new_root;\n  if (node == root) return root;\n  if (dist < 0.0 || dist > node.d) dist = node.d / 2.0;\n  tmp = node.d;\n\n  /* p: the central multi-parent node\n   * q: the new parent, previous a child of p\n   * r: old parent\n   * i: previous position of q in p\n   * d: previous distance p->d\n   */\n  q = new_root = kn_new_node();\n  q.child[0] = node;\n  q.child[0].d = dist;\n  p = node.parent;\n  q.child[0].parent = q;\n  for (let i = 0; i < p.child.length; ++i) if (p.child[i] == node) break;\n  q.child[1] = p;\n  d = p.d;\n  p.d = tmp - dist;\n  r = p.parent;\n  p.parent = q;\n  while (r != null) {\n    s = r.parent; /* store r's parent */\n    p.child[i] = r; /* change r to p's child */\n    for (let i = 0; i < r.child.length; ++i /* update i */)\n      if (r.child[i] == p) break;\n    r.parent = p; /* update r's parent */\n    tmp = r.d;\n    r.d = d;\n    d = tmp; /* swap r->d and d, i.e. update r->d */\n    q = p;\n    p = r;\n    r = s; /* update p, q and r */\n  }\n  /* now p is the root node */\n  if (p.child.length == 2) {\n    /* remove p and link the other child of p to q */\n    r = p.child[1 - i]; /* get the other child */\n    for (let i = 0; i < q.child.length; ++i /* the position of p in q */)\n      if (q.child[i] == p) break;\n    r.d += p.d;\n    r.parent = q;\n    q.child[i] = r; /* link r to q */\n  } else {\n    /* remove one child in p */\n    for (j = k = 0; j < p.child.length; ++j) {\n      p.child[k] = p.child[j];\n      if (j != i) ++k;\n    }\n    --p.child.length;\n  }\n  return new_root;\n}\n\nfunction kn_multifurcate(p) {\n  var i, par, idx, tmp, old_length;\n  if (p.child.length == 0 || !p.parent) return;\n  par = p.parent;\n  for (let i = 0; i < par.child.length; ++i) if (par.child[i] == p) break;\n  idx = i;\n  tmp = par.child.length - idx - 1;\n  old_length = par.child.length;\n  par.child.length += p.child.length - 1;\n  for (let i = 0; i < tmp; ++i)\n    par.child[par.child.length - 1 - i] = par.child[old_length - 1 - i];\n  for (let i = 0; i < p.child.length; ++i) {\n    p.child[i].parent = par;\n    if (p.child[i].d >= 0 && p.d >= 0) p.child[i].d += p.d;\n    par.child[i + idx] = p.child[i];\n  }\n}\n\nfunction kn_reorder(root) {\n  const sort_leaf = function (a, b) {\n    if (a.depth < b.depth) return 1;\n    if (a.depth > b.depth) return -1;\n    return String(a.name) < String(b.name)\n      ? -1\n      : String(a.name) > String(b.name)\n      ? 1\n      : 0;\n  };\n  const sort_weight = function (a, b) {\n    return a.weight / a.n_tips - b.weight / b.n_tips;\n  };\n\n  var x = new Array();\n  var i,\n    node = kn_expand_node(root);\n  // get depth\n  node[node.length - 1].depth = 0;\n  for (let i = node.length - 2; i >= 0; --i) {\n    var q = node[i];\n    q.depth = q.parent.depth + 1;\n    if (q.child.length == 0) x.push(q);\n  }\n  // set weight for leaves\n  x.sort(sort_leaf);\n  for (let i = 0; i < x.length; ++i) (x[i].weight = i), (x[i].n_tips = 1);\n  // set weight for internal nodes\n  for (let i = 0; i < node.length; ++i) {\n    var q = node[i];\n    if (q.child.length) {\n      // internal\n      var j,\n        n = 0,\n        w = 0;\n      for (j = 0; j < q.child.length; ++j) {\n        n += q.child[j].n_tips;\n        w += q.child[j].weight;\n      }\n      q.n_tips = n;\n      q.weight = w;\n    }\n  }\n  // swap children\n  for (let i = 0; i < node.length; ++i)\n    if (node[i].child.length >= 2) node[i].child.sort(sort_weight);\n}\n\nfunction kn_reorder_num_tips(root) {\n  const sort_leaf = function (a, b) {\n    return a.num_tips - b.num_tips;\n  };\n\n  const sort_weight = function (a, b) {\n    return a.num_tips - b.num_tips;\n  };\n\n  var x = new Array();\n  var i,\n    node = kn_expand_node(root);\n  // get depth\n  node[node.length - 1].depth = 0;\n  for (let i = node.length - 2; i >= 0; --i) {\n    var q = node[i];\n    q.depth = q.parent.depth + 1;\n    if (q.child.length == 0) x.push(q);\n  }\n  // set weight for leaves\n  x.sort(sort_leaf);\n  for (let i = 0; i < x.length; ++i) (x[i].weight = i), (x[i].n_tips = 1);\n  // set weight for internal nodes\n  for (let i = 0; i < node.length; ++i) {\n    var q = node[i];\n    if (q.child.length) {\n      // internal\n      var j,\n        n = 0,\n        w = 0;\n      for (j = 0; j < q.child.length; ++j) {\n        n += q.child[j].n_tips;\n        w += q.child[j].weight;\n      }\n      q.n_tips = n;\n      q.weight = w;\n    }\n  }\n  // swap children\n  for (let i = 0; i < node.length; ++i)\n    if (node[i].child.length >= 2) node[i].child.sort(sort_weight);\n}\n\n/*****************************************\n ***** Functions for plotting a tree *****\n *****************************************/\n\n/* Calculate the coordinate of each node */\nfunction kn_calxy(tree, is_real) {\n  var i, j, scale;\n  // calculate y\n  scale = tree.n_tips - 1;\n  for (let i = (j = 0); i < tree.node.length; ++i) {\n    var p = tree.node[i];\n    p.y =\n      p.child.length && !p.hidden\n        ? (p.child[0].y + p.child[p.child.length - 1].y) / 2.0\n        : j++ / scale;\n    if (p.child.length == 0) p.miny = p.maxy = p.y;\n    else\n      (p.miny = p.child[0].miny), (p.maxy = p.child[p.child.length - 1].maxy);\n  }\n  // calculate x\n  if (is_real) {\n    // use branch length\n    var root = tree.node[tree.node.length - 1];\n    scale = root.x = root.d >= 0.0 ? root.d : 0.0;\n    for (let i = tree.node.length - 2; i >= 0; --i) {\n      var p = tree.node[i];\n      p.x = p.parent.x + (p.d >= 0.0 ? p.d : 0.0);\n      if (p.x > scale) scale = p.x;\n    }\n    if (scale == 0.0) is_real = false;\n  }\n  if (!is_real) {\n    // no branch length\n    scale = tree.node[tree.node.length - 1].x = 1.0;\n    for (let i = tree.node.length - 2; i >= 0; --i) {\n      var p = tree.node[i];\n      p.x = p.parent.x + 1.0;\n      if (p.x > scale) scale = p.x;\n    }\n    for (let i = 0; i < tree.node.length - 1; ++i)\n      if (tree.node[i].child.length == 0) tree.node[i].x = scale;\n  }\n  // rescale x\n  for (let i = 0; i < tree.node.length; ++i) tree.node[i].x /= scale;\n  return is_real;\n}\n\nfunction kn_get_node(tree, conf, x, y) {\n  if (conf.is_circular) {\n    for (var i = 0; i < tree.node.length; ++i) {\n      var p = tree.node[i];\n      var tmp_x = Math.floor(\n        conf.width / 2 +\n          p.x * conf.real_r * Math.cos(p.y * conf.full_arc) +\n          0.999\n      );\n      var tmp_y = Math.floor(\n        conf.height / 2 +\n          p.x * conf.real_r * Math.sin(p.y * conf.full_arc) +\n          0.999\n      );\n      var tmp_l = 2;\n      if (\n        x >= tmp_x - tmp_l &&\n        x <= tmp_x + tmp_l &&\n        y >= tmp_y - tmp_l &&\n        y <= tmp_y + tmp_l\n      )\n        return i;\n    }\n  } else {\n    for (var i = 0; i < tree.node.length; ++i) {\n      var tmp_x = tree.node[i].x * conf.real_x + conf.shift_x;\n      var tmp_y = tree.node[i].y * conf.real_y + conf.shift_y;\n      var tmp_l = conf.box_width * 0.6;\n      if (\n        x >= tmp_x - tmp_l &&\n        x <= tmp_x + tmp_l &&\n        y >= tmp_y - tmp_l &&\n        y <= tmp_y + tmp_l\n      )\n        return i;\n    }\n  }\n  return tree.node.length;\n}\n\nexport { kn_expand_node, kn_reorder, kn_parse, kn_calxy, kn_reorder_num_tips };\n","import {\n  kn_expand_node,\n  // kn_reorder,\n  //kn_reorder_num_tips,\n  kn_parse,\n  kn_calxy,\n} from \"./jstree\";\nimport pako from \"pako\";\nimport axios from \"axios\";\nimport reduceMaxOrMin from \"./reduceMaxOrMin\";\nconst emptyList = [];\n\nfunction removeSquareBracketedComments(str) {\n  return str.replace(/\\[[^\\]]*\\]/g, \"\");\n}\n\nasync function do_fetch(url, sendStatusMessage, whatIsBeingDownloaded) {\n  if (!sendStatusMessage) {\n    sendStatusMessage = () => {};\n  }\n  // send progress on downloadProgress\n\n  if (url.endsWith(\".gz\")) {\n    const response = await axios.get(url, {\n      responseType: \"arraybuffer\",\n      onDownloadProgress: (progress) => {\n        sendStatusMessage({\n          message: \"Downloading compressed \" + whatIsBeingDownloaded,\n          percentage: (progress.loaded / progress.total) * 100,\n        });\n      },\n    });\n    sendStatusMessage({\n      message: \"Decompressing compressed \" + whatIsBeingDownloaded,\n    });\n    const inflated = pako.ungzip(response.data);\n    const text = new TextDecoder(\"utf-8\").decode(inflated);\n    return text;\n  } else {\n    const response = await axios.get(url, {\n      onDownloadProgress: (progress) => {\n        sendStatusMessage({\n          message: \"Downloading \" + whatIsBeingDownloaded,\n          percentage: (progress.loaded / progress.total) * 100,\n        });\n      },\n    });\n    const text = response.data;\n    //parse text:\n    return text;\n  }\n}\n\nfunction fetch_or_extract(file_obj, sendStatusMessage, whatIsBeingDownloaded) {\n  if (file_obj.status === \"url_supplied\") {\n    return do_fetch(\n      file_obj.filename,\n      sendStatusMessage,\n      whatIsBeingDownloaded\n    );\n  } else if (file_obj.status === \"loaded\") {\n    if (file_obj.filename.includes(\".gz\")) {\n      const compressed_data = file_obj.data;\n      sendStatusMessage({\n        message: \"Decompressing compressed \" + whatIsBeingDownloaded,\n      });\n      const inflated = pako.ungzip(compressed_data);\n      const text = new TextDecoder(\"utf-8\").decode(inflated);\n      return text;\n    } else {\n      // convert array buffer to string\n      const text = new TextDecoder(\"utf-8\").decode(file_obj.data);\n      return text;\n    }\n  }\n}\n\nasync function cleanup(tree) {\n  tree.node.forEach((node, i) => {\n    node.node_id = i;\n  });\n\n  tree.node = tree.node.map((node, i) => {\n    return {\n      name: node.name.replace(/'/g, \"\"),\n      parent_id: node.parent ? node.parent.node_id : node.node_id,\n      x_dist: node.x,\n      mutations: emptyList,\n      y: node.y,\n      num_tips: node.num_tips,\n      is_tip: node.child.length === 0,\n      node_id: node.node_id,\n    };\n  });\n\n  const scale_y = 2000;\n\n  const all_xes = tree.node.map((node) => node.x_dist);\n  all_xes.sort((a, b) => a - b);\n  const ref_x_percentile = 0.99;\n  const ref_x = all_xes[Math.floor(all_xes.length * ref_x_percentile)];\n\n  const scale_x = 450 / ref_x;\n\n  tree.node.forEach((node) => {\n    node.x_dist = node.x_dist * scale_x;\n    node.y = node.y * scale_y;\n  });\n}\n\nexport async function processNewick(data, sendStatusMessage) {\n  let the_data;\n\n  the_data = await fetch_or_extract(data, sendStatusMessage, \"tree\");\n\n  sendStatusMessage({\n    message: \"Parsing Newick file\",\n  });\n\n  // remove all square-bracketed comments from the string\n  the_data = removeSquareBracketedComments(the_data);\n\n  const tree = kn_parse(the_data);\n\n  function assignNumTips(node) {\n    if (node.child.length === 0) {\n      node.num_tips = 1;\n    } else {\n      node.num_tips = 0;\n      node.child.forEach((child) => {\n        node.num_tips += assignNumTips(child);\n      });\n    }\n\n    return node.num_tips;\n  }\n\n  function sortWithNumTips(node) {\n    node.child.sort((a, b) => {\n      return a.num_tips - b.num_tips;\n    });\n    node.child.forEach((child) => {\n      sortWithNumTips(child);\n    });\n  }\n  assignNumTips(tree.root);\n  const total_tips = tree.root.num_tips;\n\n  if (data.ladderize) {\n    sortWithNumTips(tree.root);\n    tree.node = kn_expand_node(tree.root);\n  }\n\n  sendStatusMessage({\n    message: \"Laying out the tree\",\n  });\n\n  kn_calxy(tree, data.useDistances === true);\n\n  sendStatusMessage({\n    message: \"Sorting on Y\",\n  });\n\n  // sort on y:\n  tree.node.sort((a, b) => a.y - b.y);\n\n  sendStatusMessage({\n    message: \"Re-processing\",\n  });\n\n  cleanup(tree);\n\n  const overallMaxX = reduceMaxOrMin(tree.node, (x) => x.x_dist, \"max\");\n  const overallMinX = reduceMaxOrMin(tree.node, (x) => x.x_dist, \"min\");\n  const overallMaxY = reduceMaxOrMin(tree.node, (x) => x.y, \"max\");\n  const overallMinY = reduceMaxOrMin(tree.node, (x) => x.y, \"min\");\n  const y_positions = tree.node.map((x) => x.y);\n\n  const output = {\n    nodes: tree.node,\n    overallMaxX,\n    overallMaxY,\n    overallMinX,\n    overallMinY,\n    y_positions,\n    mutations: [],\n    node_to_mut: {},\n    rootMutations: [],\n    rootId: 0,\n    overwrite_config: { num_tips: total_tips, from_newick: true },\n  };\n\n  return output;\n}\n\nexport async function processMetadataFile(data, sendStatusMessage) {\n  const logStatusToConsole = (message) => {\n    console.log(message.message);\n  };\n  let the_data;\n\n  the_data = await fetch_or_extract(data, logStatusToConsole, \"metadata\");\n\n  const lines = the_data.split(\"\\n\");\n  const output = {};\n  let separator;\n  if (data.filename.includes(\"tsv\")) {\n    separator = \"\\t\";\n  } else if (data.filename.includes(\"csv\")) {\n    separator = \",\";\n  } else {\n    sendStatusMessage({\n      error: \"Unknown file type for metadata, should be csv or tsv\",\n    });\n    throw new Error(\"Unknown file type\");\n  }\n\n  let headers;\n\n  lines.forEach((line, i) => {\n    if (i % 10000 === 0) {\n      sendStatusMessage({\n        message: \"Parsing metadata file\",\n        percentage: (i / lines.length) * 100,\n      });\n    }\n    if (i === 0) {\n      headers = line.split(separator);\n    } else {\n      const values = line.split(separator);\n      let name;\n      if (data.taxonColumn) {\n        const taxon_column_index = headers.indexOf(data.taxonColumn);\n        name = values[taxon_column_index];\n      } else {\n        name = values[0];\n      }\n      const as_obj = {};\n      values.slice(1).forEach((value, j) => {\n        as_obj[\"meta_\" + headers[j + 1]] = value;\n      });\n      output[name] = as_obj;\n    }\n  });\n  sendStatusMessage({\n    message: \"Finalising\",\n  });\n\n  return [output, headers];\n}\n\nexport async function processNewickAndMetadata(data, sendStatusMessage) {\n  const treePromise = processNewick(data, sendStatusMessage);\n\n  const metadataInput = data.metadata;\n  if (!metadataInput) {\n    return await treePromise;\n  }\n  // Wait for both promises to resolve\n  const [tree, metadata_double] = await Promise.all([\n    treePromise,\n    processMetadataFile(metadataInput, sendStatusMessage),\n  ]);\n  const [metadata, headers] = metadata_double;\n  const blanks = Object.fromEntries(\n    headers.slice(1).map((x) => [\"meta_\" + x, \"\"])\n  );\n  sendStatusMessage({\n    message: \"Assigning metadata to nodes\",\n  });\n  tree.nodes.forEach((node) => {\n    const this_metadata = metadata[node.name];\n    if (this_metadata) {\n      Object.assign(node, this_metadata);\n    } else {\n      Object.assign(node, blanks);\n    }\n  });\n\n  return tree;\n}\n","import pako from \"pako\";\nimport axios from \"axios\";\nimport reduceMaxOrMin from \"./reduceMaxOrMin\";\nimport { kn_expand_node, kn_calxy } from \"./jstree\";\n\nconst emptyList = [];\n\nconst nodeMutationsFromNextStrainToTaxonium = (\n  mutations,\n  unique_mutations,\n  mutation_lookup\n) => {\n  //console.log(\"mutations\", mutations);\n  const keys = Object.keys(mutations);\n  const nuc_muts = mutations[\"nuc\"] ? mutations[\"nuc\"] : [];\n\n  const genes = keys.filter((key) => key !== \"nuc\");\n  const taxonium_muts = [];\n  nuc_muts.forEach((nuc_mut) => {\n    // input format is like \"C123T\", we want to break this into old_residue, position and new_residue\n    // use regex to match the position\n    const position = nuc_mut.match(/\\d+/g);\n    const index_of_position = nuc_mut.indexOf(position[0]);\n    const previous_residue = nuc_mut.substring(0, index_of_position);\n    const new_residue = nuc_mut.substring(\n      index_of_position + position[0].length\n    );\n    const tax_format = {\n      type: \"nt\",\n      gene: \"nt\",\n      previous_residue,\n      new_residue,\n      residue_pos: parseInt(position[0]),\n    };\n    const jsonned = JSON.stringify(tax_format);\n    //console.log(\"jsonned\", jsonned);\n    if (mutation_lookup[jsonned]) {\n      taxonium_muts.push(mutation_lookup[jsonned]);\n    } else {\n      unique_mutations.push({\n        ...tax_format,\n        mutation_id: unique_mutations.length,\n      });\n      const this_index = unique_mutations.length - 1;\n      mutation_lookup[jsonned] = this_index;\n      taxonium_muts.push(this_index);\n    }\n  });\n\n  genes.forEach((gene) => {\n    const gene_muts = mutations[gene];\n    gene_muts.forEach((gene_mut) => {\n      // input format is like \"Q123F\", we want to break this into old_residue, position and new_residue\n      // use regex to match the position\n      const position = gene_mut.match(/\\d+/g);\n      const index_of_position = gene_mut.indexOf(position[0]);\n      const previous_residue = gene_mut.substring(0, index_of_position);\n      const new_residue = gene_mut.substring(\n        index_of_position + position[0].length\n      );\n      const tax_format = {\n        type: \"aa\",\n        gene,\n        previous_residue,\n        new_residue,\n        residue_pos: parseInt(position[0]),\n      };\n      const jsonned = JSON.stringify(tax_format);\n      //console.log(\"jsonned\", jsonned);\n      if (mutation_lookup[jsonned]) {\n        taxonium_muts.push(mutation_lookup[jsonned]);\n      } else {\n        unique_mutations.push({\n          ...tax_format,\n          mutation_id: unique_mutations.length,\n        });\n        const this_index = unique_mutations.length - 1;\n        mutation_lookup[jsonned] = this_index;\n        taxonium_muts.push(this_index);\n      }\n    });\n  });\n\n  return taxonium_muts;\n};\n\nasync function do_fetch(url, sendStatusMessage, whatIsBeingDownloaded) {\n  if (!sendStatusMessage) {\n    sendStatusMessage = () => {};\n  }\n  // send progress on downloadProgress\n\n  if (url.endsWith(\".gz\")) {\n    const response = await axios.get(url, {\n      responseType: \"arraybuffer\",\n      onDownloadProgress: (progress) => {\n        sendStatusMessage({\n          message: \"Downloading compressed \" + whatIsBeingDownloaded,\n          percentage: (progress.loaded / progress.total) * 100,\n        });\n      },\n    });\n    sendStatusMessage({\n      message: \"Decompressing compressed \" + whatIsBeingDownloaded,\n    });\n    const inflated = pako.ungzip(response.data);\n    const text = new TextDecoder(\"utf-8\").decode(inflated);\n    return text;\n  } else {\n    const response = await axios.get(url, {\n      transformResponse: (res) => {\n        // Do your own parsing here if needed ie JSON.parse(res);\n        return res;\n      },\n      responseType: \"json\",\n      onDownloadProgress: (progress) => {\n        sendStatusMessage({\n          message: \"Downloading \" + whatIsBeingDownloaded,\n          percentage: (progress.loaded / progress.total) * 100,\n        });\n      },\n    });\n    const text = response.data;\n    //parse text:\n    return text;\n  }\n}\n\nfunction fetch_or_extract(file_obj, sendStatusMessage, whatIsBeingDownloaded) {\n  if (file_obj.status === \"url_supplied\") {\n    return do_fetch(\n      file_obj.filename,\n      sendStatusMessage,\n      whatIsBeingDownloaded\n    );\n  } else if (file_obj.status === \"loaded\") {\n    if (file_obj.filename.includes(\".gz\")) {\n      const compressed_data = file_obj.data;\n      sendStatusMessage({\n        message: \"Decompressing compressed \" + whatIsBeingDownloaded,\n      });\n      const inflated = pako.ungzip(compressed_data);\n      const text = new TextDecoder(\"utf-8\").decode(inflated);\n      return text;\n    } else {\n      // convert array buffer to string\n      const text = new TextDecoder(\"utf-8\").decode(file_obj.data);\n      return text;\n    }\n  }\n}\n\n// TODO: cleanup and processJsTree are duplicated in processNewick.js\nasync function cleanup(tree) {\n  tree.node.forEach((node, i) => {\n    node.node_id = i;\n  });\n\n  tree.node = tree.node.map((node, i) => {\n    const cleaned = {\n      name: node.name.replace(/'/g, \"\"),\n      parent_id: node.parent ? node.parent.node_id : node.node_id,\n      mutations: node.mutations ? node.mutations : emptyList,\n      y: node.y,\n      num_tips: node.num_tips,\n      is_tip: node.child.length === 0,\n      node_id: node.node_id,\n    };\n\n    Object.keys(node).forEach((key) => {\n      if (key.startsWith(\"meta_\")) {\n        cleaned[key] = node[key];\n      }\n    });\n\n    if (node.x_dist !== undefined) {\n      cleaned.x_dist = node.x_dist;\n    }\n    if (node.x_time !== undefined) {\n      cleaned.x_time = node.x_time;\n    }\n    return cleaned;\n  });\n  const scale_y = 2000;\n\n  const all_xes_dist = tree.node.map((node) => node.x_dist);\n  const all_xes_time = tree.node.map((node) => node.x_time);\n\n  all_xes_dist.sort((a, b) => a - b);\n  all_xes_time.sort((a, b) => a - b);\n  const ref_x_percentile = 0.99;\n  const ref_x_dist =\n    all_xes_dist[Math.floor(all_xes_dist.length * ref_x_percentile)];\n  const ref_x_time =\n    all_xes_time[Math.floor(all_xes_time.length * ref_x_percentile)];\n\n  const scale_x_dist = 450 / ref_x_dist;\n  const scale_x_time = 450 / ref_x_time;\n\n  tree.node.forEach((node) => {\n    if (node.x_dist !== undefined) {\n      node.x_dist = node.x_dist * scale_x_dist;\n    }\n    if (node.x_time !== undefined) {\n      node.x_time = node.x_time * scale_x_time;\n    }\n    node.y = node.y * scale_y;\n  });\n}\n\nasync function processJsTree(tree, data, config, sendStatusMessage) {\n  function assignNumTips(node) {\n    if (node.child.length === 0) {\n      node.num_tips = 1;\n    } else {\n      node.num_tips = 0;\n      node.child.forEach((child) => {\n        node.num_tips += assignNumTips(child);\n      });\n    }\n\n    return node.num_tips;\n  }\n\n  function sortWithNumTips(node) {\n    node.child.sort((a, b) => {\n      return a.num_tips - b.num_tips;\n    });\n    node.child.forEach((child) => {\n      sortWithNumTips(child);\n    });\n  }\n  assignNumTips(tree.root);\n  const total_tips = tree.root.num_tips;\n\n  if (data.ladderize) {\n    sortWithNumTips(tree.root);\n  }\n\n  tree.node = kn_expand_node(tree.root);\n\n  sendStatusMessage({\n    message: \"Laying out the tree\",\n  });\n\n  // first set \"d\" to genetic distance\n  if (tree.node[0].pre_x_dist !== undefined) {\n    tree.node.forEach((node) => {\n      node.d = node.pre_x_dist;\n    });\n\n    kn_calxy(tree, true);\n    // kn_calxy sets x -> move x to x_dist\n    tree.node.forEach((node) => {\n      node.x_dist = node.x;\n    });\n  }\n  if (tree.node[0].pre_x_time !== undefined) {\n    // rerun kn_calxy to set x again (but for time)\n    tree.node.forEach((node) => {\n      node.d = node.pre_x_time;\n    });\n    kn_calxy(tree, true);\n    tree.node.forEach((node) => {\n      node.x_time = node.x;\n    });\n  }\n\n  // Now tree.node will have x_dist and/or x_time depending on JSON content\n\n  sendStatusMessage({\n    message: \"Sorting on Y\",\n  });\n\n  // sort on y:\n  tree.node.sort((a, b) => a.y - b.y);\n\n  sendStatusMessage({\n    message: \"Re-processing\",\n  });\n\n  cleanup(tree);\n\n  const overallMaxX = reduceMaxOrMin(tree.node, (x) => x.x_dist, \"max\");\n  const overallMinX = reduceMaxOrMin(tree.node, (x) => x.x_dist, \"min\");\n  const overallMaxY = reduceMaxOrMin(tree.node, (x) => x.y, \"max\");\n  const overallMinY = reduceMaxOrMin(tree.node, (x) => x.y, \"min\");\n  const y_positions = tree.node.map((x) => x.y);\n\n  const output = {\n    nodes: tree.node,\n    overallMaxX,\n    overallMaxY,\n    overallMinX,\n    overallMinY,\n    y_positions,\n    mutations: [],\n    node_to_mut: {},\n    rootMutations: [],\n    rootId: 0,\n    overwrite_config: { ...config, num_tips: total_tips },\n  };\n\n  return output;\n}\n\nfunction json_preorder(root) {\n  let n_tips = 0;\n  const parents = {};\n  parents[root.name] = null;\n  const path = [];\n  const stack = [root];\n\n  const unique_mutations = [];\n\n  const mutation_lookup = {};\n  while (stack.length > 0) {\n    const nodeJson = stack.pop();\n    let div = null;\n    let time = null;\n    if (nodeJson.node_attrs.div) {\n      div = nodeJson.node_attrs.div;\n    }\n    if (nodeJson.node_attrs.num_date) {\n      time = nodeJson.node_attrs.num_date.value;\n    }\n    //console.log(nodeJson);\n    // this is the node format for downstream processing\n    const parsedNode = {\n      name: nodeJson.name,\n      child: [],\n      meta: \"\",\n      hl: false,\n      hidden: false,\n      mutations:\n        nodeJson.branch_attrs && nodeJson.branch_attrs.mutations\n          ? nodeMutationsFromNextStrainToTaxonium(\n              nodeJson.branch_attrs.mutations,\n              unique_mutations,\n              mutation_lookup\n            )\n          : [],\n    };\n\n    // assign distance\n    div && (parsedNode.div = div);\n    time && (parsedNode.time = time);\n\n    // assign metadata\n    const notMeta = [\"div\", \"num_date\"];\n    Object.keys(nodeJson.node_attrs)\n      .filter((x) => !notMeta.includes(x))\n      .forEach((x) => {\n        // sometimes the data is not wrapped in a value tag. e.g. \"accession\" in mpx\n        const attr = nodeJson.node_attrs[x];\n        parsedNode[`meta_${x}`] =\n          attr.value && typeof attr.value !== \"object\"\n            ? attr.value\n            : typeof attr !== \"object\"\n            ? attr\n            : \"\";\n      });\n\n    path.push(parsedNode);\n    if (nodeJson.children !== undefined) {\n      for (const childJson of nodeJson.children) {\n        parents[childJson.name] = parsedNode;\n        stack.push(childJson);\n      }\n    } else {\n      n_tips += 1;\n    }\n  }\n  return { path, parents, n_tips, unique_mutations };\n}\n\nasync function json_to_tree(json) {\n  const rootJson = json.tree;\n  const {\n    path: preorder,\n    parents,\n    n_tips,\n    unique_mutations,\n  } = json_preorder(rootJson);\n\n  const nodes = [];\n  let root;\n  for (const node of preorder) {\n    const parent = parents[node.name];\n    node.parent = parent;\n    if (parent) {\n      parent.child.push(node);\n      if (node.div !== undefined) {\n        node.pre_x_dist = node.div - parent.div;\n      }\n      if (node.time !== undefined) {\n        node.pre_x_time = node.time - parent.time;\n      }\n    } else {\n      root = node;\n      node.pre_x_time = 0;\n      node.pre_x_dist = 0;\n    }\n    nodes.push(node);\n  }\n\n  const jsTree = {\n    // tree in jstree.js format\n    node: nodes,\n    error: 0,\n    n_tips: n_tips,\n    root: root,\n  };\n\n  const config = {};\n\n  console.log(\"META\", json.meta);\n  config.title = json.meta.title;\n  console.log(\"META PROV\", json.meta.data_provenance);\n  if (json.meta && json.meta.data_provenance) {\n    config.source =\n      json.meta.data_provenance.map((source) => source.name).join(\" & \") +\n      \" on \" +\n      json.meta.updated +\n      \" in a build maintained by \" +\n      json.meta.maintainers.map((source) => source.name).join(\" & \");\n  }\n\n  config.overlay = `<p>This is a tree generated from a <a href='//nextstrain.org'>Nextstrain</a> JSON file, being visualised in Taxonium.</p>.`;\n  if (json.meta.build_url) {\n    config.overlay += `<p>The Nextstrain build is available <a class='underline' href='${json.meta.build_url}'>here</a>.</p>`;\n  }\n\n  return { jsTree, config, unique_mutations };\n}\n\nexport async function processNextstrain(data, sendStatusMessage) {\n  const the_data = await fetch_or_extract(data, sendStatusMessage, \"tree\");\n\n  sendStatusMessage({\n    message: \"Parsing NS file\",\n  });\n\n  const { jsTree, config, unique_mutations } = await json_to_tree(\n    JSON.parse(the_data)\n  );\n\n  const output = await processJsTree(jsTree, data, config, sendStatusMessage);\n  const node_to_mut = output.nodes.map((x) => x.mutations);\n\n  return { ...output, mutations: unique_mutations, node_to_mut: node_to_mut };\n}\n","function reduceMaxOrMin(array, accessFunction, maxOrMin) {\n  if (maxOrMin === \"max\") {\n    return accessFunction(\n      array.reduce(function (max, item) {\n        return accessFunction(item) > accessFunction(max) ? item : max;\n      })\n    );\n  } else if (maxOrMin === \"min\") {\n    return accessFunction(\n      array.reduce(function (min, item) {\n        return accessFunction(item) < accessFunction(min) ? item : min;\n      })\n    );\n  }\n}\n\nexport default reduceMaxOrMin;\n","import filtering from \"taxonium_data_handling/filtering.js\";\nimport { getNextstrainSubtreeJson } from \"taxonium_data_handling/exporting.js\";\nimport { processJsonl } from \"taxonium_data_handling/importing.js\";\nimport { processNewickAndMetadata } from \"../utils/processNewick.js\";\nimport { processNextstrain } from \"../utils/processNextstrain.js\";\nconsole.log(\"worker starting\");\npostMessage({ data: \"Worker starting\" });\n\nconst the_cache = {};\n\nconst cache_helper = {\n  retrieve_from_cache: (key) => the_cache[key],\n  store_in_cache: (key, value) => {\n    the_cache[key] = value;\n\n    // Total size of the lists in the cache\n    let total_size = 0;\n    for (const key in the_cache) {\n      total_size += the_cache[key].length;\n    }\n\n    // If the cache is too big, remove a random item\n    if (total_size > 100e6) {\n      const keys = Object.keys(the_cache);\n      const random_key = keys[Math.floor(Math.random() * keys.length)];\n      delete the_cache[random_key];\n    }\n  },\n};\n\nlet processedUploadedData;\n\nconst sendStatusMessage = (status_obj) => {\n  postMessage({\n    type: \"status\",\n    data: status_obj,\n  });\n};\n\nconst waitForProcessedData = async () => {\n  // check if processedUploadedData is defined, if not wait until it is\n  if (processedUploadedData === undefined) {\n    await new Promise((resolve) => {\n      const interval = setInterval(() => {\n        if (processedUploadedData !== undefined) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 100);\n    });\n  }\n};\n\nexport const queryNodes = async (boundsForQueries) => {\n  console.log(\"Worker query Nodes\");\n  await waitForProcessedData();\n\n  const {\n    nodes,\n    // eslint-disable-next-line no-unused-vars\n    overallMaxX,\n    overallMaxY,\n    // eslint-disable-next-line no-unused-vars\n    overallMinX,\n    overallMinY,\n    y_positions,\n  } = processedUploadedData;\n\n  let min_y = isNaN(boundsForQueries.min_y)\n    ? overallMinY\n    : boundsForQueries.min_y;\n  let max_y = isNaN(boundsForQueries.max_y)\n    ? overallMaxY\n    : boundsForQueries.max_y;\n\n  let min_x = isNaN(boundsForQueries.min_x)\n    ? overallMinX\n    : boundsForQueries.min_x;\n  let max_x = isNaN(boundsForQueries.max_x)\n    ? overallMaxX\n    : boundsForQueries.max_x;\n  if (min_y < overallMinY) {\n    min_y = overallMinY;\n  }\n  if (max_y > overallMaxY) {\n    max_y = overallMaxY;\n  }\n  let result;\n  console.log(\"filtering\");\n\n  result = {\n    nodes: filtering.getNodes(\n      nodes,\n      y_positions,\n      min_y,\n      max_y,\n      min_x,\n      max_x,\n      boundsForQueries.xType\n    ),\n  };\n\n  console.log(\"result is done\");\n\n  return result;\n};\n\nconst search = async (search, bounds) => {\n  console.log(\"Worker query Search\");\n  await waitForProcessedData();\n\n  const {\n    nodes,\n    // eslint-disable-next-line no-unused-vars\n    overallMaxX,\n    overallMaxY,\n    // eslint-disable-next-line no-unused-vars\n    overallMinX,\n    overallMinY,\n    y_positions,\n    node_to_mut,\n    mutations,\n  } = processedUploadedData;\n  const spec = JSON.parse(search);\n  console.log(spec);\n\n  const min_y = bounds && bounds.min_y ? bounds.min_y : overallMinY;\n  const max_y = bounds && bounds.max_y ? bounds.max_y : overallMaxY;\n  const min_x = bounds && bounds.min_x ? bounds.min_x : overallMinX;\n  const max_x = bounds && bounds.max_x ? bounds.max_x : overallMaxX;\n  const xType = bounds && bounds.xType ? bounds.xType : \"x_dist\";\n\n  const result = filtering.singleSearch({\n    data: nodes,\n    spec,\n    min_y,\n    max_y,\n    min_x,\n    max_x,\n    y_positions,\n    mutations,\n    node_to_mut,\n    xType: xType,\n    cache_helper,\n  });\n\n  console.log(\"got search result\", result);\n  result.key = spec.key;\n  return result;\n};\n\nconst getConfig = async () => {\n  console.log(\"Worker getConfig\");\n  await waitForProcessedData();\n  const config = {};\n  config.num_nodes = processedUploadedData.nodes.length;\n  config.initial_x =\n    (processedUploadedData.overallMaxX + processedUploadedData.overallMinX) / 2;\n  config.initial_y =\n    (processedUploadedData.overallMaxY + processedUploadedData.overallMinY) / 2;\n  config.initial_zoom = config.initial_zoom ? config.initial_zoom : -2;\n  config.genes = [\n    ...new Set(processedUploadedData.mutations.map((x) => (x ? x.gene : null))),\n  ]\n    .filter((x) => x)\n    .sort();\n\n  config.rootMutations = processedUploadedData.rootMutations;\n  config.rootId = processedUploadedData.rootId;\n\n  config.name_accessor = \"name\";\n  const to_remove = [\n    \"parent_id\",\n    \"node_id\",\n    \"x\",\n    \"x_dist\",\n    \"x_time\",\n    \"y\",\n    \"mutations\",\n    \"name\",\n    \"num_tips\",\n    \"time_x\",\n    \"clades\",\n    \"is_tip\",\n  ];\n\n  const firstNode = processedUploadedData.nodes[0];\n  config.x_accessors =\n    firstNode.x_dist && firstNode.x_time\n      ? [\"x_dist\", \"x_time\"]\n      : firstNode.x_dist\n      ? [\"x_dist\"]\n      : [\"x_time\"];\n\n  config.keys_to_display = Object.keys(processedUploadedData.nodes[0]).filter(\n    (x) => !to_remove.includes(x)\n  );\n\n  /*config.search_types = [\n    { name: \"name\", label: \"Name\", type: \"text_match\" },\n    { name: \"meta_Lineage\", label: \"PANGO lineage\", type: \"text_exact\" },\n    { name: \"meta_Country\", label: \"Country\", type: \"text_match\" },\n    { name: \"mutation\", label: \"Mutation\", type: \"mutation\" },\n    { name: \"revertant\", label: \"Revertant\", type: \"revertant\" },\n    { name: \"genbank\", label: \"Genbank\", type: \"text_per_line\" },\n  ];*/\n  const prettyName = (x) => {\n    // if x starts with meta_\n    if (x.startsWith(\"meta_\")) {\n      const bit = x.substring(5);\n      const capitalised_first_letter =\n        bit.charAt(0).toUpperCase() + bit.slice(1);\n      return capitalised_first_letter;\n    }\n    if (x === \"mutation\") {\n      return \"Mutation\";\n    }\n\n    const capitalised_first_letter = x.charAt(0).toUpperCase() + x.slice(1);\n    return capitalised_first_letter;\n  };\n\n  const typeFromKey = (x) => {\n    if (x === \"mutation\") {\n      return \"mutation\";\n    }\n    if (x === \"genotype\") {\n      return \"genotype\";\n    }\n    if (x === \"num_tips\") {\n      return \"number\";\n    }\n    if (x === \"genbank\") {\n      return \"text_per_line\";\n    }\n    if (x === \"revertant\") {\n      return \"revertant\";\n    }\n    if (x === \"meta_Lineage\") {\n      return \"text_exact\";\n    }\n    if (x === \"boolean\") return \"boolean\";\n\n    return \"text_match\";\n  };\n  const initial_search_types = [\"name\", ...config.keys_to_display];\n\n  if (processedUploadedData.mutations.length > 0) {\n    initial_search_types.push(\"mutation\");\n    initial_search_types.push(\"genotype\");\n  }\n\n  if (processedUploadedData.rootMutations.length > 0) {\n    initial_search_types.push(\"revertant\");\n  }\n\n  initial_search_types.push(\"num_tips\");\n\n  if (initial_search_types.length > 1) {\n    initial_search_types.push(\"boolean\");\n  }\n\n  config.search_types = initial_search_types.map((x) => ({\n    name: x,\n    label: prettyName(x),\n    type: typeFromKey(x),\n  }));\n\n  config.search_types.forEach((x) => {\n    // if \"text\" is found in the type\n    if (x.type.includes(\"text\")) {\n      x.controls = true;\n    }\n  });\n\n  const colorByOptions = [...config.keys_to_display];\n  if (processedUploadedData.mutations.length > 0) {\n    colorByOptions.push(\"genotype\");\n  }\n  colorByOptions.push(\"None\");\n\n  if (colorByOptions.length < 2) {\n    config.colorMapping = { None: [50, 50, 150] };\n  }\n\n  config.colorBy = { colorByOptions };\n\n  //check if 'meta_pangolin_lineage' is in options\n\n  config.defaultColorByField = colorByOptions.includes(\"meta_pangolin_lineage\")\n    ? \"meta_pangolin_lineage\"\n    : colorByOptions[0];\n\n  config.mutations = processedUploadedData.mutations;\n\n  console.log(\"overwrite with\", processedUploadedData.overwrite_config);\n\n  const merged_config = {\n    ...config,\n    ...processedUploadedData.overwrite_config,\n  };\n\n  //console.log(\"config is \", config);\n\n  return merged_config;\n};\n\nconst getDetails = async (node_id) => {\n  console.log(\"Worker getDetails\");\n  await waitForProcessedData();\n  const { nodes } = processedUploadedData;\n  const node = nodes[node_id];\n  console.log(\"node is \", node);\n  const details = { ...node };\n  details.mutations = processedUploadedData.node_to_mut[node_id]\n    ? processedUploadedData.node_to_mut[node_id].map(\n        (x) => processedUploadedData.mutations[x]\n      )\n    : [];\n  console.log(\"details is \", details);\n  return details;\n};\n\nconst getList = async (node_id, att) => {\n  console.log(\"Worker getList\");\n  await waitForProcessedData();\n  const { nodes } = processedUploadedData;\n  const atts = filtering.getTipAtts(nodes, node_id, att);\n  return atts;\n};\n\nonmessage = async (event) => {\n  //Process uploaded data:\n  console.log(\"Worker onmessage\");\n  const { data } = event;\n  if (\n    data.type === \"upload\" &&\n    data.data &&\n    data.data.filename &&\n    data.data.filename.includes(\"jsonl\")\n  ) {\n    processedUploadedData = await processJsonl(data.data, sendStatusMessage);\n    console.log(\"processedUploadedData created\");\n  } else if (\n    data.type === \"upload\" &&\n    data.data &&\n    data.data.filename &&\n    data.data.filetype === \"nwk\"\n  ) {\n    console.log(\"got nwk file\", data.data);\n    data.data.useDistances = true;\n    processedUploadedData = await processNewickAndMetadata(\n      data.data,\n      sendStatusMessage\n    );\n  } else if (\n    data.type === \"upload\" &&\n    data.data &&\n    data.data.filename &&\n    data.data.filetype === \"nextstrain\"\n  ) {\n    processedUploadedData = await processNextstrain(\n      data.data,\n      sendStatusMessage\n    );\n  } else if (data.type === \"upload\" && data.data && data.data.filename) {\n    sendStatusMessage({\n      error:\n        \"Only Taxonium jsonl files are supported (could not find 'jsonl' in filename)\",\n    });\n  } else {\n    if (data.type === \"query\") {\n      console.log(\"Worker query\");\n      const result = await queryNodes(data.bounds);\n      postMessage({ type: \"query\", data: result });\n    }\n    if (data.type === \"search\") {\n      console.log(\"Worker search\");\n      const result = await search(data.search, data.bounds);\n      postMessage({ type: \"search\", data: result });\n    }\n    if (data.type === \"config\") {\n      console.log(\"Worker config\");\n      const result = await getConfig();\n      postMessage({ type: \"config\", data: result });\n    }\n    if (data.type === \"details\") {\n      console.log(\"Worker details\");\n      const result = await getDetails(data.node_id);\n      postMessage({ type: \"details\", data: result });\n    }\n    if (data.type === \"list\") {\n      const result = await getList(data.node_id, data.key);\n      postMessage({ type: \"list\", data: result });\n    }\n    if (data.type === \"nextstrain\") {\n      const result = await getNextstrainSubtreeJson(\n        data.node_id,\n        processedUploadedData.nodes,\n        data.config\n      );\n      postMessage({ type: \"nextstrain\", data: result });\n    }\n  }\n};\n","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_pako_dist_pako_esm_mjs\",\"vendors-node_modules_stream-browserify_index_js\",\"vendors-node_modules_call-bind_callBound_js-node_modules_define-properties_index_js-node_modu-dc279b\",\"vendors-node_modules_axios_index_js-node_modules_taxonium_data_handling_exporting_js-node_mod-cf4727\"], function() { return __webpack_require__(\"./src/webworkers/localBackendWorker.js\"); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"src_webworkers_localBackendWorker_js\": 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunktaxonium\"] = self[\"webpackChunktaxonium\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([\"vendors-node_modules_pako_dist_pako_esm_mjs\",\"vendors-node_modules_stream-browserify_index_js\",\"vendors-node_modules_call-bind_callBound_js-node_modules_define-properties_index_js-node_modu-dc279b\",\"vendors-node_modules_axios_index_js-node_modules_taxonium_data_handling_exporting_js-node_mod-cf4727\"].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":["kn_new_node","parent","child","name","meta","d","hl","hidden","kn_add_node","str","l","tree","x","i","r","beg","end","z","length","charAt","c","meta_beg","error","substr","j","cc","parseFloat","node","push","kn_parse","stack","Array","Object","n_tips","m","root","kn_write_nh","depth","p","cur_depth","is_first","n_bra","String","kn_check_tree","document","write","y","kn_expand_node","q","pop","kn_count_tips","kn_search_leaf","pattern","re","RegExp","alert","test","kn_remove_node","k","kn_move_node","s","kn_reroot","dist","tmp","new_root","kn_multifurcate","par","idx","old_length","kn_reorder","sort_leaf","a","b","sort_weight","weight","sort","n","w","kn_reorder_num_tips","num_tips","kn_calxy","is_real","scale","miny","maxy","kn_get_node","conf","is_circular","tmp_x","Math","floor","width","real_r","cos","full_arc","tmp_y","height","sin","tmp_l","real_x","shift_x","real_y","shift_y","box_width","pako","axios","reduceMaxOrMin","emptyList","removeSquareBracketedComments","replace","do_fetch","url","sendStatusMessage","whatIsBeingDownloaded","endsWith","get","responseType","onDownloadProgress","progress","message","percentage","loaded","total","response","inflated","ungzip","data","text","TextDecoder","decode","fetch_or_extract","file_obj","status","filename","includes","compressed_data","cleanup","forEach","node_id","map","parent_id","x_dist","mutations","is_tip","scale_y","all_xes","ref_x_percentile","ref_x","scale_x","processNewick","assignNumTips","sortWithNumTips","the_data","total_tips","ladderize","useDistances","overallMaxX","overallMinX","overallMaxY","overallMinY","y_positions","output","nodes","node_to_mut","rootMutations","rootId","overwrite_config","from_newick","processMetadataFile","logStatusToConsole","console","log","lines","split","separator","Error","line","headers","values","taxonColumn","taxon_column_index","indexOf","as_obj","slice","value","processNewickAndMetadata","treePromise","metadataInput","metadata","Promise","all","metadata_double","blanks","fromEntries","this_metadata","assign","nodeMutationsFromNextStrainToTaxonium","unique_mutations","mutation_lookup","keys","nuc_muts","genes","filter","key","taxonium_muts","nuc_mut","position","match","index_of_position","previous_residue","substring","new_residue","tax_format","type","gene","residue_pos","parseInt","jsonned","JSON","stringify","mutation_id","this_index","gene_muts","gene_mut","transformResponse","res","cleaned","startsWith","undefined","x_time","all_xes_dist","all_xes_time","ref_x_dist","ref_x_time","scale_x_dist","scale_x_time","processJsTree","config","pre_x_dist","pre_x_time","json_preorder","parents","path","nodeJson","div","time","node_attrs","num_date","parsedNode","branch_attrs","notMeta","attr","children","childJson","json_to_tree","json","rootJson","preorder","jsTree","title","data_provenance","source","join","updated","maintainers","overlay","build_url","processNextstrain","parse","array","accessFunction","maxOrMin","reduce","max","item","min","filtering","getNextstrainSubtreeJson","processJsonl","postMessage","the_cache","cache_helper","retrieve_from_cache","store_in_cache","total_size","random_key","random","processedUploadedData","status_obj","waitForProcessedData","resolve","interval","setInterval","clearInterval","queryNodes","boundsForQueries","min_y","isNaN","max_y","min_x","max_x","result","getNodes","xType","search","bounds","spec","singleSearch","getConfig","num_nodes","initial_x","initial_y","initial_zoom","Set","name_accessor","to_remove","firstNode","x_accessors","keys_to_display","prettyName","bit","capitalised_first_letter","toUpperCase","typeFromKey","initial_search_types","search_types","label","controls","colorByOptions","colorMapping","None","colorBy","defaultColorByField","merged_config","getDetails","details","getList","att","atts","getTipAtts","onmessage","event","filetype"],"sourceRoot":""}