(self["webpackChunktaxonium"] = self["webpackChunktaxonium"] || []).push([["node_modules_jbrowse_plugin-gff3_esm_Gff3Adapter_Gff3Adapter_js"],{

/***/ "./node_modules/@jbrowse/plugin-gff3/esm/Gff3Adapter/Gff3Adapter.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@jbrowse/plugin-gff3/esm/Gff3Adapter/Gff3Adapter.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _jbrowse_core_data_adapters_BaseAdapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jbrowse/core/data_adapters/BaseAdapter */ "./node_modules/@jbrowse/core/data_adapters/BaseAdapter.js");
/* harmony import */ var _jbrowse_core_data_adapters_BaseAdapter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_jbrowse_core_data_adapters_BaseAdapter__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _jbrowse_core_util_io__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jbrowse/core/util/io */ "./node_modules/@jbrowse/core/util/io/index.js");
/* harmony import */ var _jbrowse_core_util_io__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_jbrowse_core_util_io__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _jbrowse_core_util_rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jbrowse/core/util/rxjs */ "./node_modules/@jbrowse/core/util/rxjs.js");
/* harmony import */ var _flatten_js_interval_tree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @flatten-js/interval-tree */ "./node_modules/@flatten-js/interval-tree/dist/main.esm.js");
/* harmony import */ var _jbrowse_core_util_simpleFeature__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @jbrowse/core/util/simpleFeature */ "./node_modules/@jbrowse/core/util/simpleFeature.js");
/* harmony import */ var _gmod_bgzf_filehandle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @gmod/bgzf-filehandle */ "./node_modules/@gmod/bgzf-filehandle/esm/index.js");
/* harmony import */ var _gmod_gff__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @gmod/gff */ "./node_modules/@gmod/gff/esm/index.js");







function isGzip(buf) {
    return buf[0] === 31 && buf[1] === 139 && buf[2] === 8;
}
/* harmony default export */ __webpack_exports__["default"] = (class extends _jbrowse_core_data_adapters_BaseAdapter__WEBPACK_IMPORTED_MODULE_0__.BaseFeatureDataAdapter {
    async loadDataP() {
        const pm = this.pluginManager;
        const buf = await (0,_jbrowse_core_util_io__WEBPACK_IMPORTED_MODULE_1__.openLocation)(this.getConf('gffLocation'), pm).readFile();
        const buffer = isGzip(buf) ? await (0,_gmod_bgzf_filehandle__WEBPACK_IMPORTED_MODULE_5__.unzip)(buf) : buf;
        // 512MB  max chrome string length is 512MB
        if (buffer.length > 536870888) {
            throw new Error('Data exceeds maximum string length (512MB)');
        }
        const data = new TextDecoder('utf8', { fatal: true }).decode(buffer);
        const lines = data.split('\n');
        const headerLines = [];
        for (let i = 0; i < lines.length && lines[i].startsWith('#'); i++) {
            headerLines.push(lines[i]);
        }
        const header = headerLines.join('\n');
        const feats = _gmod_gff__WEBPACK_IMPORTED_MODULE_6__["default"].parseStringSync(data, {
            parseFeatures: true,
            parseComments: false,
            parseDirectives: false,
            parseSequences: false,
        });
        const intervalTree = feats
            .flat()
            .map((f, i) => new _jbrowse_core_util_simpleFeature__WEBPACK_IMPORTED_MODULE_4__["default"]({
            data: this.featureData(f),
            id: `${this.id}-offset-${i}`,
        }))
            .reduce((acc, obj) => {
            const key = obj.get('refName');
            if (!acc[key]) {
                acc[key] = new _flatten_js_interval_tree__WEBPACK_IMPORTED_MODULE_3__["default"]();
            }
            acc[key].insert([obj.get('start'), obj.get('end')], obj);
            return acc;
        }, {});
        return { header, intervalTree };
    }
    async loadData() {
        if (!this.gffFeatures) {
            this.gffFeatures = this.loadDataP().catch(e => {
                this.gffFeatures = undefined;
                throw e;
            });
        }
        return this.gffFeatures;
    }
    async getRefNames(opts = {}) {
        const { intervalTree } = await this.loadData();
        return Object.keys(intervalTree);
    }
    async getHeader() {
        const { header } = await this.loadData();
        return header;
    }
    getFeatures(query, opts = {}) {
        return (0,_jbrowse_core_util_rxjs__WEBPACK_IMPORTED_MODULE_2__.ObservableCreate)(async (observer) => {
            var _a;
            try {
                const { start, end, refName } = query;
                const { intervalTree } = await this.loadData();
                (_a = intervalTree[refName]) === null || _a === void 0 ? void 0 : _a.search([start, end]).forEach(f => observer.next(f));
                observer.complete();
            }
            catch (e) {
                observer.error(e);
            }
        }, opts.signal);
    }
    featureData(data) {
        const f = { ...data };
        f.start -= 1; // convert to interbase
        if (data.strand === '+') {
            f.strand = 1;
        }
        else if (data.strand === '-') {
            f.strand = -1;
        }
        else if (data.strand === '.') {
            f.strand = 0;
        }
        else {
            f.strand = undefined;
        }
        f.phase = Number(data.phase);
        f.refName = data.seq_id;
        if (data.score === null) {
            delete f.score;
        }
        if (data.phase === null) {
            delete f.score;
        }
        const defaultFields = [
            'start',
            'end',
            'seq_id',
            'score',
            'type',
            'source',
            'phase',
            'strand',
        ];
        const dataAttributes = data.attributes || {};
        Object.keys(dataAttributes).forEach(a => {
            let b = a.toLowerCase();
            if (defaultFields.includes(b)) {
                // add "suffix" to tag name if it already exists
                // reproduces behavior of NCList
                b += '2';
            }
            if (dataAttributes[a] !== null) {
                let attr = dataAttributes[a];
                if (Array.isArray(attr) && attr.length === 1) {
                    ;
                    [attr] = attr;
                }
                f[b] = attr;
            }
        });
        f.refName = f.seq_id;
        // the SimpleFeature constructor takes care of recursively inflating subfeatures
        if (data.child_features && data.child_features.length) {
            f.subfeatures = data.child_features
                .map(childLocs => childLocs.map(childLoc => this.featureData(childLoc)))
                .flat();
        }
        delete f.child_features;
        delete f.data;
        delete f.derived_features;
        delete f.attributes;
        delete f.seq_id;
        return f;
    }
    freeResources( /* { region } */) { }
});
//# sourceMappingURL=Gff3Adapter.js.map

/***/ }),

/***/ "?3899":
/*!*****************************!*\
  !*** ./localFile (ignored) ***!
  \*****************************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?9a27":
/*!**********************************!*\
  !*** file-uri-to-path (ignored) ***!
  \**********************************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?ed1b":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?d17e":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (function() {

/* (ignored) */

/***/ })

}]);
//# sourceMappingURL=node_modules_jbrowse_plugin-gff3_esm_Gff3Adapter_Gff3Adapter_js.bundle.js.map